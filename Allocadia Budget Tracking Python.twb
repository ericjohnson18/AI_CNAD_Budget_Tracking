<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0617.0954                               -->
<workbook original-version='18.1' source-build='2018.3.8 (20183.19.0617.0954)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' inline='true' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Budget Totals' name='textscan.11dxekd1iwga5b1ew38b21ta62q5'>
            <connection class='textscan' directory='/Users/erjohnso/Documents/Budget Tracking' filename='Budget Totals.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Budget Tracking Data copy' name='excel-direct.1tv366k1p6ae5m0zk0h8x1swbln0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/erjohnso/Documents/Budget Tracking/Budget Tracking Data Python.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[2019-07-18].[Campaign]' />
                <expression op='[Budget Totals.csv].[Campaign]' />
              </expression>
              <expression op='='>
                <expression op='[2019-07-18].[Function]' />
                <expression op='[Budget Totals.csv].[Function]' />
              </expression>
            </expression>
          </clause>
          <relation connection='excel-direct.1tv366k1p6ae5m0zk0h8x1swbln0' name='2019-07-18' table='[&apos;2019-07-18$&apos;]' type='table'>
            <columns gridOrigin='A1:N4570:no:A1:N4570:0' header='yes' outcome='6'>
              <column datatype='string' name='Function' ordinal='0' />
              <column datatype='string' name='Budget_Name' ordinal='1' />
              <column datatype='string' name='Campaign' ordinal='2' />
              <column datatype='string' name='Marketing_Activity' ordinal='3' />
              <column datatype='string' name='Marketing_Activity_Type' ordinal='4' />
              <column datatype='string' name='Line_Item' ordinal='5' />
              <column datatype='string' name='Activity_Description' ordinal='6' />
              <column datatype='string' name='Quarter' ordinal='7' />
              <column datatype='real' name='Spent' ordinal='8' />
              <column datatype='real' name='Forecast' ordinal='9' />
              <column datatype='date' name='Date_Pulled' ordinal='10' />
              <column datatype='string' name='Negative_Forecast_Tag' ordinal='11' />
              <column datatype='string' name='Negative_Spent_Tag' ordinal='12' />
              <column datatype='string' name='OpenShift_Tag' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.11dxekd1iwga5b1ew38b21ta62q5' name='Budget Totals.csv' table='[Budget Totals#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Function' ordinal='0' />
              <column datatype='string' name='Campaign' ordinal='1' />
              <column datatype='integer' name='Budget' ordinal='2' />
              <column datatype='string' name='Owner' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Activity_Description]' value='[2019-07-18].[Activity_Description]' />
          <map key='[Budget]' value='[Budget Totals.csv].[Budget]' />
          <map key='[Budget_Name]' value='[2019-07-18].[Budget_Name]' />
          <map key='[Campaign (Budget Totals.csv)]' value='[Budget Totals.csv].[Campaign]' />
          <map key='[Campaign]' value='[2019-07-18].[Campaign]' />
          <map key='[Date_Pulled]' value='[2019-07-18].[Date_Pulled]' />
          <map key='[Forecast]' value='[2019-07-18].[Forecast]' />
          <map key='[Function (Budget Totals.csv)]' value='[Budget Totals.csv].[Function]' />
          <map key='[Function]' value='[2019-07-18].[Function]' />
          <map key='[Line_Item]' value='[2019-07-18].[Line_Item]' />
          <map key='[Marketing_Activity]' value='[2019-07-18].[Marketing_Activity]' />
          <map key='[Marketing_Activity_Type]' value='[2019-07-18].[Marketing_Activity_Type]' />
          <map key='[Negative_Forecast_Tag]' value='[2019-07-18].[Negative_Forecast_Tag]' />
          <map key='[Negative_Spent_Tag]' value='[2019-07-18].[Negative_Spent_Tag]' />
          <map key='[OpenShift_Tag]' value='[2019-07-18].[OpenShift_Tag]' />
          <map key='[Owner]' value='[Budget Totals.csv].[Owner]' />
          <map key='[Quarter]' value='[2019-07-18].[Quarter]' />
          <map key='[Spent]' value='[2019-07-18].[Spent]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Function</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Function]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Function</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Budget_Name]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Budget_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Campaign</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Campaign]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Campaign</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing_Activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Marketing_Activity]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Marketing_Activity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing_Activity_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Marketing_Activity_Type]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Marketing_Activity_Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Line_Item</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Line_Item]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Line_Item</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Activity_Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Activity_Description]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Activity_Description</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quarter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Quarter]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Quarter</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Spent]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Spent</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Forecast</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Forecast]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Forecast</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_Pulled</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date_Pulled]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Date_Pulled</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative_Forecast_Tag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative_Forecast_Tag]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Negative_Forecast_Tag</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative_Spent_Tag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative_Spent_Tag]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>Negative_Spent_Tag</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenShift_Tag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OpenShift_Tag]</local-name>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias>OpenShift_Tag</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2019-07-18]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N4570:no:A1:N4570:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Budget Totals.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Function</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Function (Budget Totals.csv)]</local-name>
            <parent-name>[Budget Totals.csv]</parent-name>
            <remote-alias>Function</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Campaign</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Campaign (Budget Totals.csv)]</local-name>
            <parent-name>[Budget Totals.csv]</parent-name>
            <remote-alias>Campaign</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget]</local-name>
            <parent-name>[Budget Totals.csv]</parent-name>
            <remote-alias>Budget</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Owner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Owner]</local-name>
            <parent-name>[Budget Totals.csv]</parent-name>
            <remote-alias>Owner</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;' value='Budget' />
          <alias key='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' value='Planned' />
          <alias key='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' value='Spent ' />
          <alias key='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Forecast:qk:1]&quot;' value='% of Total Forecast' />
          <alias key='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Forecast:qk]&quot;' value='Forecast' />
          <alias key='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Spent:qk:1]&quot;' value='% of Total Spent' />
          <alias key='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Spent:qk]&quot;' value='Spent' />
        </aliases>
      </column>
      <column caption='Activity Description' datatype='string' name='[Activity_Description]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
      <column caption='Budget Name' datatype='string' name='[Budget_Name]' role='dimension' type='nominal' />
      <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
      <column caption='Date Pulled' datatype='date' name='[Date_Pulled]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
      <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
      <column caption='Line Item' datatype='string' name='[Line_Item]' role='dimension' type='nominal' />
      <column caption='Marketing Activity' datatype='string' name='[Marketing_Activity]' role='dimension' type='nominal' />
      <column caption='Marketing Activity Type' datatype='string' name='[Marketing_Activity_Type]' role='dimension' type='nominal' />
      <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
      <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='OpenShift Tag' datatype='string' name='[OpenShift_Tag]' role='dimension' type='nominal' />
      <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
      <column-instance column='[Budget]' derivation='Attribute' name='[attr:Budget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget]' derivation='Count' name='[cnt:Budget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget]' derivation='CountD' name='[ctd:Budget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Budget]' derivation='Median' name='[med:Budget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget]' derivation='None' name='[none:Budget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast]' derivation='None' name='[none:Forecast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OpenShift_Tag]' derivation='None' name='[none:OpenShift_Tag:nk]' pivot='key' type='nominal' />
      <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast]' derivation='Sum' name='[pcto:sum:Forecast:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Forecast]' derivation='Sum' name='[pcto:sum:Forecast:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Spent]' derivation='Sum' name='[pcto:sum:Spent:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Spent]' derivation='Sum' name='[pcto:sum:Spent:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast]' derivation='Sum' name='[sum:Forecast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.734694' measure-ordering='alphabetic' measure-percentage='0.265306' rowDisplayCount='10000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='tableau20_10_0' type='palette'>
            <map to='#004153'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:med:Forecast:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Forecast:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Forecast:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Forecast:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Forecast:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[attr:Budget:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cnt:Budget:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[ctd:Budget:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:avg:Budget:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:avg:Budget:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:med:Budget:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[med:Budget:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Budget:qk]&quot;</bucket>
            </map>
            <map to='#ee0000'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Spent:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Spent:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
      <datasources>
        <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
      </datasources>
      <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
        <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
        <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
        <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
        <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]'>
        <groupfilter function='member' level='[none:Negative_Forecast_Tag:nk]' member='&quot;Positive Forecast&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]'>
        <groupfilter function='member' level='[none:Negative_Spent_Tag:nk]' member='&quot;Positive Spent&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='AI to OpenShift'>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='OpenShift Tag' datatype='string' name='[OpenShift_Tag]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[OpenShift_Tag]' derivation='None' name='[none:OpenShift_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast]' derivation='Sum' name='[pcto:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[pcto:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;APAC&quot;' function='range' level='[none:Function:nk]' to='&quot;LATAM&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Commercial&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Public Sector&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag:nk]' value='87' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='APAC AI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>APAC Agile Integration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;APAC&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='57' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='APAC CNAD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>APAC Cloud Native App Dev</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Cloud Native App Dev&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;APAC&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='58' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='CNAD to OpenShift'>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='OpenShift Tag' datatype='string' name='[OpenShift_Tag]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[OpenShift_Tag]' derivation='None' name='[none:OpenShift_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast]' derivation='Sum' name='[pcto:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[pcto:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[pcto:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Cloud Native App Dev&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;APAC&quot;' function='range' level='[none:Function:nk]' to='&quot;LATAM&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Commercial&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Public Sector&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag:nk]' value='87' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Digital AI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Digital Agile Integration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;GDC Digital&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='52' />
            <format attr='display' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='58' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='min' id='refline0' label='Budget' label-type='custom' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Digital CNAD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Digital Cloud Native App Dev</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Cloud Native App Dev&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;GDC Digital&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='84' />
            <format attr='display' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='54' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='max' id='refline0' label='Budget' label-type='custom' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='EMEA AI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>EMEA Agile Integration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Budget:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;EMEA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='stroke-size' id='refline0' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='EMEA AI (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>EMEA Agile Integration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Budget:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;EMEA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='stroke-size' id='refline0' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='EMEA AI TESTING'>
      <layout-options>
        <title>
          <formatted-text>
            <run>EMEA Agile Integration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;EMEA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk:1]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='stroke-size' id='refline0' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk:1] + [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk:1])</rows>
        <cols>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='EMEA CNAD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>EMEA Cloud Native App Dev</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Cloud Native App Dev&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;EMEA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='GDC AI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GDC Agile Integration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Budget Name' datatype='string' name='[Budget_Name]' role='dimension' type='nominal' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Budget_Name]' derivation='None' name='[none:Budget_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Agile Integration&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Business Transformation&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Cloud-Native App Dev&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Cross-Program Events&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Enablement&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Hybrid Cloud Infrastructure&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - IT Automation &amp; Management&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Mid-Market&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Optimize IT&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;Global Demand Center&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='52' />
            <format attr='display' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='58' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='GDC CNAD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GDC Cloud Native App Dev</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Budget Name' datatype='string' name='[Budget_Name]' role='dimension' type='nominal' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Budget_Name]' derivation='None' name='[none:Budget_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Agile Integration&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Business Transformation&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Cloud-Native App Dev&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Cross-Program Events&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Enablement&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Hybrid Cloud Infrastructure&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - IT Automation &amp; Management&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Mid-Market&quot;' />
              <groupfilter function='member' level='[none:Budget_Name:nk]' member='&quot;532 - Campaign - Optimize IT&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Cloud Native App Dev&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;Global Demand Center&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='76' />
            <format attr='display' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='55' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='LATAM AI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>LATAM Agile Integration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;LATAM&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='57' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='LATAM CNAD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>LATAM Cloud Native App Dev</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Cloud Native App Dev&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;LATAM&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='58' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='NA COMM AI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>NA COMM Agile Integration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Commercial&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='57' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='NA COMM CNAD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>NA COMM Cloud Native App Dev</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Cloud Native App Dev&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Commercial&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='58' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='NA PS AI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>NA PS Agile Integration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Agile Integration&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Public Sector&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='57' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='NA PS CNAD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>NA PS Cloud Native App Dev</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Forecast]' role='measure' type='quantitative' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast]' derivation='Sum' name='[cum:sum:Forecast:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Spent]' derivation='Sum' name='[cum:sum:Spent:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Spent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[cum:sum:Forecast:qk]&quot;</bucket>
              <bucket>&quot;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]'>
            <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;Cloud Native App Dev&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Public Sector&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='60' />
            <format attr='title' class='0' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' value='58' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]' value='true' />
            <format attr='text-format' field='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' />
              <lod column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Budget' label-type='custom' probability='95' scope='per-table' value-column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[avg:Budget:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[Multiple Values]</rows>
        <cols>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Quarter Spend'>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-06-05_data.csv+ (Multiple Connections)' name='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n' />
          </datasources>
          <datasource-dependencies datasource='federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n'>
            <column caption='Campaign1' datatype='string' name='[Campaign]' role='dimension' type='nominal' />
            <column caption='Function1' datatype='string' name='[Function]' role='dimension' type='nominal' />
            <column caption='Negative Forecast Tag' datatype='string' name='[Negative_Forecast_Tag]' role='dimension' type='nominal' />
            <column caption='Negative Spent Tag' datatype='string' name='[Negative_Spent_Tag]' role='dimension' type='nominal' />
            <column caption='Quarter1' datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[Spent]' role='measure' type='quantitative' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Function]' derivation='None' name='[none:Function:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Forecast_Tag]' derivation='None' name='[none:Negative_Forecast_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Spent_Tag]' derivation='None' name='[none:Negative_Spent_Tag:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spent]' derivation='Sum' name='[sum:Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;APAC&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;EMEA&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;GDC Digital&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;Global Demand Center&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;LATAM&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Commercial&quot;' />
              <groupfilter function='member' level='[none:Function:nk]' member='&quot;NA Public Sector&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</column>
            <column>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[sum:Spent:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk] / [federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk])</rows>
        <cols>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='EMEA AI TESTING'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]&#10;[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A52C53A1-25F8-46F2-9997-234A4619E844}' />
    </window>
    <window class='worksheet' maximized='true' name='EMEA AI (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BED2251-AC12-4FFE-90BE-438B2FE3E113}' />
    </window>
    <window class='worksheet' name='EMEA AI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast_Tag:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent_Tag:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92071829-040E-466F-8279-82C788B242DD}' />
    </window>
    <window class='worksheet' name='EMEA CNAD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85AFA8C8-042A-4161-A2BF-B6CA45F4326B}' />
    </window>
    <window class='worksheet' name='APAC AI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19A6D5F6-8FD1-465D-A63A-2B70E693B045}' />
    </window>
    <window class='worksheet' name='APAC CNAD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38E60941-1BE6-4215-B24A-3B85A7398745}' />
    </window>
    <window class='worksheet' name='LATAM AI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17631AF4-9385-45D8-A05F-F42FC7918AD4}' />
    </window>
    <window class='worksheet' name='LATAM CNAD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9EBAEC3D-F286-4EC3-9069-EC0EE0A4661D}' />
    </window>
    <window class='worksheet' name='NA COMM AI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{452D0D24-2A9B-420C-BDC5-2F1038766E96}' />
    </window>
    <window class='worksheet' name='NA COMM CNAD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C576276C-DDA9-4A94-BE08-599328D55D39}' />
    </window>
    <window class='worksheet' name='NA PS AI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59E086AD-3ADB-4453-8DD5-C3EDAA6325BE}' />
    </window>
    <window class='worksheet' name='NA PS CNAD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9A5AC70-FBA1-4379-80DD-CA980EE4316A}' />
    </window>
    <window class='worksheet' name='GDC AI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget:ok]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8DDAFE1-AB87-45A9-8890-3E925A509BAC}' />
    </window>
    <window class='worksheet' name='GDC CNAD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget:ok]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E73D985A-7F74-4309-B2EE-89887C7928B4}' />
    </window>
    <window class='worksheet' name='Digital AI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget:ok]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02E2E042-9C57-4CF0-95C7-E951C3314180}' />
    </window>
    <window class='worksheet' name='Digital CNAD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget:ok]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Budget_Name:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D496D5A9-33D5-4F1E-B3E7-C639CB47BD07}' />
    </window>
    <window class='worksheet' name='AI to OpenShift'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag_2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9F190E3-71CC-4FDF-99FF-11501453EC65}' />
    </window>
    <window class='worksheet' name='CNAD to OpenShift'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[:Measure Names]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Forecast:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Negative_Spent:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:OpenShift_Tag_2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E54319EF-DAD8-4F67-8A6A-AFF35C9DF401}' />
    </window>
    <window class='worksheet' name='Quarter Spend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Campaign:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Function:nk]</field>
            <field>[federated.0aj2fnc1lfvdjz1aqj1cq1v4hx5n].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD4BC291-0A03-4D9E-B210-933372E08951}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='AI to OpenShift' width='384'>
      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
      3Qod8Z1yuczk5CSlUonl5WWZQfd6vbjdbvbv3y9juDuFXv7f//t/1Ot1UqmUPLkDAwMMDw9L
      QZvL5Wg0Gpw+fZpKpUImk5H7t1qt9PX1EQgEGB8fx2Qy3XKYoKuri3379uH3+3E6nTzwwAPU
      ajV++MMfks/nmZqawul0kslkMBqNeL1eSqUSq6urxONxrl69KqthvF4vNpuNRx55BK/XKyuo
      zp8/T71eZ2pqCrPZjNfrpVwuk0qlsFqt2Gw2urq68Hg8rK+vU61WyeVyNJtNotEoVquVp59+
      GkVRsFqt5PN5FhcXSafTxGIxuX+r1YrRaGR0dBSHw8EDDzyAyWQin89TqVR4/fXXMZlMuFwu
      arWa9PwajQbhcBi3283hw4dlIldRFGq1Go1Gg7fffptGo8H6+rosIJidnSWbzeJyua577+Tz
      edLpNJcuXQKgv7+fPXv28KlPfUp6ALVaDVVVsVgsGAwGbDYbADMzMzQaDd577z1arZZUEj6f
      j4GBAfbu3YvD4cBut7O4uEg+n2d6eppKpUI0GsVgMDA3N4eiKPL67du3D6vVitPp5NKlS1y6
      dEnmg86cOcP8/DyxWAyr1cr+/fsxm83s3buXWq0mz/vly5dl+MjtduNwODh48CCRSASv14vJ
      ZGJqaopGo8HU1BQOh4PHH3+cTCbD5OQkVqsVh8PB8PAwIyMjt3QP69wYkQstFov09fXR09ND
      JBKR99nQ0BDBYJD3339f5qmKxSKhUAhN05iensbpdPLoo4+ya9cubDablGGjo6ObClGeeuqp
      Tfu+bQqgXq9TrVaJxWIsLS2xe/duLBYLTzzxBLBz2efNutrtdptqtcrFixdJJBLSQlZVlWg0
      SiQSIRQK4fP5pCDaemzvvvsupVKJq1evYrPZ8Hq9PPzww3g8Hux2Oy6Xi3K5TKVS4fTp02Sz
      WRYXF2W5ltPp5KGHHmJgYIDR0VGAW1YAHo+HwcFBotEogUCARqNBq9Xivffekx6Bw+GgVCpJ
      4V2tVlldXeXixYu88847FAoFKXDcbjeDg4NS2BgMBhYWFiiVSvz85z/HZrPR09NDKpViYWFB
      CsDR0VG6u7uZnp4mn8+zsrKCqqpMTEzgdDp54oknMBgMWK1WqtUqi4uLXL16lYsXL1IsFqlU
      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
      IJvN8v7773Pp0iUOHz7M+vXr2bRpEzabDbPZzOnTp0mn03JOIu84FApRqVRwuVy0Wi3m5uZk
      uqjP58PtdjM9PS3rFux2O5s2bZLL0lwuxz/8wz/g8/nYs2cPlUqFYrFIMBgkFAoRCoXo6uqS
      8zh8+DB6vR6fz4fRaGTDhg3ymsSq8ezZsyQSCTZt2sTw8DDHjx8nHA7Lrq8bN25ULX2VTwXh
      Il3pwRCyQrhjqtWqNKy0Wi0bNmygWCzidDpZWlri5ZdfZvfu3ezatUt6PiYnJwmHw2zZskVW
      CSuKwq5du8jn87z++uvs2LGDLVu2SAPsxIkTvPPOOzz99NMMDAxIxTE5OUm9Xr9zCkBYzCs3
      bVlpkYsMlFAoRDqdplgsdkSwhfVYKBSw2+1XjZYbDAbZPxsurxoymYzMHb/a3G5kheB2u2Vu
      ervdZm5uTl5XKpXq8H2vRqS/zs7OYjabZS6/yNUfGRmRf9yr+e1W3rOVL0C2Z/b7/YyMjMj7
      FolEZKZVs9lkw4YNV5xXp9Nht9uxWq0YDAaKxSKLi4uYzWYURZFBdo/HQ7PZpLu7Wxa6mM1m
      1q9fTz6fZ3FxkWKxyPz8vAxaidYK4h7YbDY0Gg0jIyMyjpPNZpmenpbN38xms3QJiYrIUCgk
      Yz6Tk5Oygluv1+PxePB6vbK6WTQGFIVqxWKRQCDQseKs1+sdm9zczpWiyv2HSLdcXl6WBZVw
      2X0TiUTkM3f06FEURZGG6QMPPIDVapVdA2KxGOfPn6fVanHp0iXi8Tgulwu9Xt+xwtfpdPT1
      9ZFMJtHpdGQyGY4ePSqzCbPZrEyq6e7ull6FVCpFtVq9swpAq9XKVDwR/BXvKYqCz+fj85//
      vOy9I4KyotFbLBZjaWmJvXv3rhnRhstxgM2bN0srNZlMMj09jc1mw263X3V+N+Jy2bRpk+yP
      Xy6Xefvttzt25BLC+2rFHDabjTfeeEOuEkTf7r6+Pl544QVZHyBeVxNI4t4IVwlczuXv7++n
      VquhKAqHDh3i5MmTRKNR2dJZq9Wybdu2K9pRm81mhoeHKZVKOJ1OIpEI586dk+8LZfT5z38e
      u93Orl27pOunq6uL3//932diYoKXX36ZpaUlLly4II+12+2YTCZ2796N1Wqlt7cXvV7Pb//2
      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
    </thumbnail>
    <thumbnail height='384' name='APAC AI' width='384'>
      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
      BibPF+eyoPNqWTP66zqtxj5D5/LxmCeMvcDHMRPnMe+fAurr6+PChQv09fWxatUqmpubuXbt
      GufOncOyLLLZLJs2baK6uppFixbxH//xHwBs2LCB6upqnn76aX79619jWRbPPvssFRUVuK5L
      JBKhurqaDRs2cObMGZYvX040Gs3n4YiIzCp5DYDruuzZs4eWlhaOHz/Od77zHQCqq6tZv349
      6XSaeDxOJBIBYO/evWzZsgWAoqIiALZt28b69esJgmD81f+2bdvG97F27VrWrl2bz8MQEZmV
      8v4pIPj8ZL5mzZoJ2yKRyPiJ/8uP/bKZeG1NRGS6m5LPTkajURoaGqZiVyIi8oT04XkREUMp
      ACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiI
      GEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigF
      QETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABER
      QykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoaakgCEYUg2
      m52KXYmIyBOakgB4nseFCxe+sn1sbIxMJjNhWyqVwvO8rzwunU7ndYwiIqZx8/nkYRhy48YN
      2tra6O7u5vbt2+zcuZNMJkNbWxv379/HcRy2b9/OypUref/99zl//jy2bbN161ZWrVrFhQsX
      OH36NGEYsnHjRtauXcsHH3xANBpl9erVXLhwgVu3bvHSSy/hunk9HBGRWSWvZ0zf9zl16hQ1
      NTW4rsvy5ctxHIeRkREWLVrEgQMHuHTpEhcuXKCqqoqLFy/y6quvMjY2xqlTp6iurub8+fPs
      37+faDRKW1sbCxYsYHR0FN/3uXv3Lu3t7ezduxfHcfJ5KCIis05eA2DbNhUVFXR1dVFSUkJz
      czO2bZNMJmlqaiKTydDZ2UlZWRme55FIJKipqSGTyeC6LkNDQ9i2TV1dHQDJZJJUKkUYhgwO
      DnL16lWWLl3KwoULsSwrn4ciIjLr5D0Ae/bs4erVqxw8eJB/+qd/Yu/evSxYsIBLly5x9uxZ
      nnvuOVauXMn9+/dxXRfXdQmCAMuyyGazOI4zvs1xHHK5HGEY0tvbS09PD+vXrycSiQAQBAFB
      EIzvXzefJ4fv+wRBMGEuc7lcwcYTfmksM8mX5xE+X6eFEuRyM3Iup92anKHnmrxfNA+CgKee
      eoqGhgai0Sjd3d24rsuJEyfYu3cvS5YswXEcioqKGB0d5dGjR2QyGXzfJ5lMkslkGBwcxHEc
      UqkUsVgM27Zpbm7mueee49ixY1RUVDBv3jxs28a2//u+tmVZ43GQP182m8W27QlzmSvgJTfr
      S2OZSb48j0BB373ajjMj5zKXy02vNTlDzzV5vwdw8OBBBgcHuXXrFlVVVaxatYquri6y2Szd
      3d3cuXOHyspKFi1aRDKZ5PDhw2SzWSoqKqiqqqKmpobDhw/jui5FRUVUVFQAn0/4ihUruH37
      NkePHuV73/uebgKLiHwDeT1juq7Lli1buHHjBtlslhdeeIHa2lqKi4spKioaf1wikSCRSLBn
      zx6uXbs2/gq/pKSEXbt2cfXqVYIgoLm5meLiYp5++mmc///KZevWrdy5c0f3AEREvqG8BsCy
      LKqrq0kkEgRBwIIFCwCora2ltrb2K4+vqqpi7ty5438WoKKigtbW1gnbqqurx/9MaWkppaWl
      +TwMEZFZaUqumSSTSTZt2vREj/26V/J6dS8iMvn0s4BERAylAIiIGEoBEBExlAIgImIoBUBE
      xFAKgIiIoRQAERFDKQAiIob6f1/9Xf+JukdYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='APAC CNAD' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3d2XMV953//2f3WSUdHe07WtkMCIEwGIMXzG68ENvZZuJ4ksrMxczFXE99
      /4q5mqmZSmWvSpzYjpNgE7ABY2MLbBaBDRaITSAJSQi0Hp29u38X/DhjGSfBdhMh9etR5TK0
      Wt1vfdT0qz+fT59uw3EcBxER8RTDMAxzposQEZGZoQAQEfEoBYCIiEcpAEREPGpOBEAqlUJz
      2e5Jp9PYtj3TZcwZyWRypkuYU3R8umdOBEBvb68OCBddv36dRCIx02XMGVevXp3pEuaUa9eu
      kclkZrqMOWFOBICIiHx5CgAREY9SANxDtm0zNTVFOp2+42vZbFbzFl+SZVlMTk7eMdx3u50t
      y5qhymYn27aJxWJks9ncMsdxyGQyxGIxDat+Sdls9guPT7jV1pZl3Xf/5v0zXcBcFYvF+P3v
      f8/w8DA+n48NGzbQ1tZGNpvlk08+4dChQ7z00kuUl5fPdKmzQm9vL7t37yYWixGJRNiyZQtN
      TU2cOXOGjo4OYrEYJSUlPPvss1RWVs50ufe98fFxXnnlFcbHxwkGg2zcuJGlS5dy/PhxOjo6
      sG2bwsJCtm/fzrx58zAMY6ZLvq9duHCBt99+m3g8TnFxMVu3bqW+vh7DMMhms/z0pz+lqqqK
      J598klAoNNPl5igA7gHbttm7dy8lJSV8+9vfZnh4mD/+8Y+UlpZi2zYXLlwgHo+TSqVmutRZ
      IZvN8uabb7J8+XIeeughjh07xsGDB3nuueeYmppi8+bN1NTU8Prrr3P+/HkFwN9gWRZvvPEG
      DQ0NbNiwgZ6eHvbv309paSk1NTV873vfo6SkhD/84Q90dXVRV1enAPgrstksu3fvZt26daxY
      sYKOjg4OHDjAd7/7XUKhEB988AEjIyMUFRXdd70qDQHdA4lEgmvXrvHYY4+Rl5dHXV0d8+bN
      4/r169TX1/PCCy9QW1s702XOGpOTkyQSCVavXk0gEGDJkiUYhkEmk2Ht2rUsXLiQ8fFxxsbG
      KCoqmuly73vxeJzBwUEee+wxQqEQjY2NlJWVMTo6Sk1NDY7jcOrUKQYHB6mqqtLJ/28YHx/H
      tm1WrFhBMBiktbWVVCpFJpOht7eXjz/+mK1btxIIBGa61DuoB3APZLNZTNMkLy8PAMMwyMvL
      I51O4/eryb+sdDpNOBwmGAwCEAwGMU0Ty7KwbZszZ86wb98+Vq9ezaJFi2a42vtfJpMhEAgQ
      DocB8Pl8hEIhMpkMyWSSjo4Ozp49SzgcpqKiYoarvf+lUiny8vJyJ/hwOIzjOExOTvLOO++w
      dOlSQqEQ6XSaTCaTOy/cD9QDuAdCoRCO4zA2NgbcGhKamJggPz9/hiubnfLz80kkEsRiMeBW
      D8u2bfx+P+fOnePgwYNs27aNRx99NBcS8peFw2Gy2Szj4+PArQuWeDxOOBymoKCA5557jn//
      93+nsbGRo0ePTpskljtFIhFisRjxeBy4Nf9nmiYTExP09fXR39/Phx9+yMWLFzlz5swMVzud
      AuAeCIVCtLS0sG/fPiYnJ7lw4QIDAwPU1NSQzWZJJpNYlpXrJt5vdwbcbwoKCigpKaGjo4NE
      IsGJEydyV61nzpxh8eLFzJs3j1gs9oV3XMl04XCYpqYm9u3bRywWo6uri7GxMcrLy+no6GBw
      cDA37JNOp3V8/g2RSIT8/Hw++ugjpqamOHbsGIWFhdTV1fHDH/6QTZs2sWzZMurq6mhoaJjp
      cqfReMQ9YBgGW7duZdeuXfz4xz8mk8lQUlJCJBLhyJEjnDx5EoDdu3fT2NjI5s2b1Tv4K0zT
      5Bvf+AZvvvkm//Vf/0UymaStrQ2/349hGHR3d9Pd3Q3AI488Qnt7+wxXfH8zTZOnn36a119/
      nf/93/8lnU5TV1dHQUEB6XSaV199lUwmQ2VlJVu2bFGv6m8wTZPnn3+evXv3cvz4cRKJBGvX
      rqWgoIBoNAqQO1bvtyE1Yy68EObChQs0Nzfj8/lmupRpbNsmlUoRj8c5dOgQK1eupLGx8b6f
      VOvr66OkpISCgoKZLmUay7JIJpMMDQ3xySefsGHDBoqLi2e6rL+pu7v7vpybsG2bZDLJxMQE
      R44c4aGHHsr1Ui3Lys213G96enqoqam5r26nhFvHZyKRoL+/n3PnzrFly5b7+sLOMAxDAfB3
      4DgO6XQa0zRzVwL3s/s1AG6zbZt0Ok0gELhvf+efdb8GwG2O45BKpfD7/fh8vvv++LxfA+C2
      2xd+oVDovgzQ2wzDMDQE9HdgGMZ9e7DORqZp5u5gka/PMAy1p4s+ewfg/W7OBMDly5fv+yuX
      2SKRSBCPx2fF1fVsEI/HuXjx4kyXMWdMTU2RyWTu66vr2WLOBEBDQ4MOCJdcu3aNkpKSWXMV
      c7+7ePEijY2NM13GnNHb20tVVZUmp10wZwLA5/PpitUlpmnm5ivk6zMMQ23pIsMw8Pl8alMX
      6JJZRMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeNSXDoCJiYkvfK/l
      X3umnOM4d3z9bpeJiMi9cdcBYFkW/f39vPzyy3R2djI6OorjOGQyGfr6+ujq6rrjexzHIZFI
      cP78eQYHB3PLJycnOX78OB0dHQwNDeE4DvF4nM7OTt5//32uXbuWe6Vaf38/cOv5NJcuXSKZ
      TLrwY4uIyF0HwI0bN/jDH/5Af38/p0+f5vz589i2zfvvv89rr73Gnj177viebDbLH//4R15+
      +WVOnDiRW/7ee+9x5swZbt68ye7duxkfH+fIkSN0dnYyOTnJrl27uHnzJv39/XzwwQcAHDly
      hMOHD+v1dCIiLrnrAJiYmABuPXRtx44dtLW1YRgGTU1NPPnkk1/44gPTNGlvb+exxx7LPbfD
      cZzcyxK2bt1KKBSir6+P06dPs2XLFrZv305xcTGXL18Gbj1b+/z583z88cds3Ljxvn1GvYjI
      bHPXT1Oqq6ujqKiIkydPUl9fz+rVqwmFQjQ3NzM8PPyFj2L2+XwsXryYiYkJRkdHAUilUjiO
      Q0VFBT6fj5KSEsbGxshkMlRXV2OaJpWVlUxNTRGJRLhw4QLd3d08++yz1NbWArdCwbKs3H5u
      D0V9dpl8dZZlkc1m9X5dl9x+gY24w7ZtstmsHv/ugrsOgLy8PL7xjW+QSCTo7e1lfHycp59+
      +ku/8sw0TRzHwbZtfD4fjuPknuJ5e3LZcZzco52LiopwHCcXIHDraYCf/+V/0TL5am63pdrT
      HWpL96lN3XHXARCPx0kkEuTn57N8+XKOHTtGIpEgHA7n7t6xbRvDMEgmk7m3YH32a7ZtEwgE
      CAQC9PX1UVVVxfXr12lpaSEvL4+enh7mz59Pb28vK1aswDAMqqqq2LJlC7/85S8pLS2lra3t
      jkcV337crh4H7Q7TNPH5fAQCgZkuZU4wDENt6SIdn+656wAYHBzkwIED9PX1MTExQVNTE3l5
      eezZs4fR0VGuXbvGn/70J9rb2+nq6qK6upqGhgbeffddBgYGSCQSOI7DQw89xLJly9i3bx+F
      hYX4fD7q6upYuXIlBw4c4NSpU2QyGZqamhgcHMQ0TUpLS3niiSc4fPgwdXV1VFRU3Ms2ERHx
      hLsOgPr6ep555hl2797NE088QU1NDeFwmKVLl2LbNuvWrQNuDRV1dXXR2tpKfn4+K1asYMWK
      FcCtOYGCggIeeeQRGhoaSKVS1NfXE4lEePDBB6moqCAej1NfX09RURGhUCh3sl+2bBmVlZUU
      Fhbeg2YQEfGeuw6AYDBITU0Nq1atoqGhIdf9ampqmrbe5OQkzzzzDPPmzQOgpaXlC7e3aNGi
      aX8PhUIsXLhw2rK8vLzcawkDgUBuElhERL6+L/1Otfb29r/69cLCQl2li4jMAnPuWUAjIyMM
      DAwwMDDAzZs37/qDYydOnLjrTxnbtp27nVVEZLaac29V/ulPf4ppmoTDYVKpFI8//jirVq36
      m7eMvfXWWzQ3NxMOh//mPsbGxjh27BhPPPEEwWDQrdJFRP6u5lwA+Hw+vvnNb1JVVcX+/fv5
      +OOPcRyHpqYmysvL+eSTT6isrKSqqopr165x8OBBpqamiMfjAAwPD7N3716mpqaoqalhy5Yt
      jI2NsWvXLkzTZMuWLZw6dYp33nmHa9eu0draSnt7u25BFZFZZ84NAVmWxQcffMDLL7/MO++8
      w9KlSzl79ixDQ0MAnD9/nqtXr5JMJvn5z39OSUkJjz76KIFAgEQiwU9/+lOi0SiPPfYYJ0+e
      5ObNm/zsZz+jsbGR0tJSXnnlFRoaGqisrGTFihXU1tbqAykiMivNuR6AYRhkMhl8Ph+RSIR4
      PD7t8dW3P5jW399PXl4e27Zty32oZHh4GJ/Px9NPP43P5yMYDDI0NMTY2Fjuk4dDQ0MUFhZS
      Xl7OAw88kLtLSURktplzAWCaJps2baKyspLTp0/z7rvvkp+fn/sk8u0wCAQCZLPZ3KeU4VZ4
      TE1NkUwmCQQC0x5JkZ+fTyQSYefOnQQCASzLmvb+AvUCRGS2mXMB4DgOH330Ue5BcgsWLMDn
      83HkyBEGBwf5+OOPaWxszH1O4bXXXqOgoIB4PE5tbS3z5s3jxz/+MYWFhYyMjFBVVUV9fT2X
      Ll2irq6O69ev09bWRjab5b333mP+/Pm0tLRoDkBEZp05NwewdetWioqK8Pv9rFmzhieeeIJ1
      69bR0NCAZVls3bqV5uZmTNPk+eefJxwOEwgE2LlzJ9FolB07dvD4448zf/588vLyKCkp4Tvf
      +Q7V1dWk02laW1spKirimWeewTRNUqnUTP/IIiJfyZzrASxfvvwLl2/duhWY/hTB+fPn09zc
      nFuWSqV4/fXXicfjZLNZ1q5dm/s08rZt23AcJ7duS0sLTU1NeiqhiMxacy4A/pLbY/mfZRjG
      tKGbcDjMD3/4Q4aHh4lGo5SUlEw7uX/+RP9F2xQRmS08EwB3q6CgQG8dExFPmDMBUFZWlvsw
      l3w9//Zv/8aBAwc4d+7cTJcyJ/znf/4nra2tM13GnPEf//Ef/OIXv2BwcHCmS5n15kwAZDIZ
      MpnMTJcxJ1iWpfZ00e1Xloo7bNvW8ekSw5kDTzS7cOECY2NjM12GiMissWbNGmPO9AD0PB73
      9PX1UVJSorkQl3R3d9/x/gv56np6eqipqSEUCs10KbOebmMREfEoBYCIiEcpAEREPEoBICLi
      UQoAERGPUgCIiHiUAkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4
      1JcOgJGRESzLumP5X3qtgOM42LZ9x9dt28a27S9cV0RE7r27fh+AZVn09vaye/duVq5cyeLF
      iyktLSWbzdLX18f4+DgrV66c9j2O49DX10d3dzf5+fksW7aMaDTK2NgYZ86cIZ1Os2jRImpr
      a5mamuKTTz5hamqKRYsWUV9fz8TEBKOjozQ1NTE1NUVvby+NjY3k5eW53hAiIl5z1z2A4eFh
      du3axfXr17l8+TIXL17Etm3eeecd/vCHP3DgwIE7vieVSvHGG2+QTCa5dOkS77//Ptlslvfe
      e4+enh5SqRR79uxhdHSUw4cPc+7cOQzD4M033+TGjRsMDAzw0UcfAdDR0UFnZ6d6CCIiLrnr
      AIjFYpimSV1dHdu3b6e9vR3DMFi2bBnPPfcc+fn5d3zPlStXCIfDbNu2jS1btjA0NMTIyAjn
      z59n8+bNPPHEExQUFNDX18enn37K1q1b2bhxIxUVFVy+fBm41fM4c+YMXV1dbN68+Qv3IyIi
      X95dDwHV1dVRXl7OsWPHOHLkCGvXrqW8vJy6ujqGh4cxDOOO75mYmKCiooJAIEBeXh55eXlM
      Tk4CUFpais/no6ioiImJCbLZLOXl5RiGQVlZGfF4nMLCQs6fP8+5c+d4/vnnqaysBG7NH3x2
      HsJxHNLptF4J6RLLsshms6TT6ZkuZU6wbVtt6aLbL4X/onOOfDl3HQDhcJhnnnmGWCzGjRs3
      2L9/Pzt37vyrV+Q+nw/LsnAcJ/ef3+/PTfaapplbBuSGdxzHwTRvdU7Ky8sBGBoawnEcDMPA
      MIzc1wEMw8Dn801bJl/d7fZVe7rj88erfD06Pt1z1wEwOTlJLBYjFArR1tbGsWPHSCQShMPh
      3F0+tm1jGAbxeBzDMKioqKCjo4PJyUlu3LhBPB6nqKiIYDDI1atXqa6uZnBwkAULFlBQUMDF
      ixdZuHAhPT09rF69GsMwKC8v58knn+RnP/sZpaWluZe/f/5q/4uWyVdz+x/X7WCWr8cwDLWl
      i25f8KlNv767bsEbN26wb98+ent7GR8fZ9GiReTl5fHHP/6RsbEx+vr6+N3vfsdDDz3Ep59+
      Sm1tLa2trUQiEX73u9+RTCZpa2ujsLCQ5cuX89Zbb5Gfn084HKa2tpb29nYOHDjA8ePHMQyD
      xsZGBgYGME2TaDTKpk2bOHToEA0NDbmhIBER+eruOgAaGhr45je/yRtvvMGmTZuoqKggGAzy
      8MMP54ZuDMMgGAxy6dIlHnzwQQKBAC+88AJDQ0OEQiGqqqrw+XysX7+elpYW0uk01dXVFBQU
      0N7eTk1NDYlEgpqaGgoLC3PhALBkyRJqamqIRqP3piVERDzmrgPA7/dTVlbGqlWrqK6uJhAI
      AFBTUzNtvVgsxtNPP51bHo1G7zhph0IhGhsbpy0LBoM0NDTcsV4oFMrt//Z8gIiIfH1fehBt
      +fLlf/XrkUiESCTylQsSEZG/D02ji4h4lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEg
      IuJRCgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCI
      iHiUAkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAi
      Ih6lABAR8SgFgIiIR7kaAI7jYFkWjuO4uVkREbkHXA2AbDbL2bNnsW07t8y2bRKJBJZlTVs3
      k8mQSqXuWJZMJt0sSURE/gK/Wxuamppi7969nDx5kpUrV/LYY49RUlLCnj17uHTpEkVFRezY
      sYPKykp6e3vZu3cvyWSS9evXs3LlSm7cuMGbb77JxMQEa9eu5aGHHmJgYICenh4eeeQRbty4
      wUcffcT69espLi52q2wREc9yrQfw/vvvMzw8TE1NDfX19WQyGU6fPs3169f5wQ9+QGNjI2+9
      9RaJRII9e/awbNkynn/+eY4cOUJfXx979+6lubmZ73//+xw9epRLly4xOTlJf38/yWSSXbt2
      EQ6HiUQibpUsIuJprgVAYWEh6XQan8/HihUrqK2tZXR0lOLiYqLRKMuXLyebzTI+Ps74+DhL
      ly6lsrKSmpoahoeHGR4epq2tjdLSUlpaWhgaGgIgkUjw3nvvYZoma9euxe93rdMiIuJprp1N
      29raGBkZ4fDhw7z88ss8+eSTtLS08Itf/IJsNsvExASjo6NMTU1hmib5+fmYpkk4HCYWi+E4
      Tu7qvqCggFQqheM4nDlzhtOnT/Ov//qvFBQUAGBZFplMJrfv2/MMpqmbmtyQzWZJpVIYhjHT
      pcwJlmURj8dnuow5I5vNkkwm75hXlC/PtQCIRCJs3LiReDyOYRgcOnSIZ599lh/84AdcuXKF
      srIyLMsiGo1i2zbxeJz8/HxSqRRVVVUYhkEsFqOkpIR4PE5RURGGYbBq1SoqKys5ePAgVVVV
      RCIRfD4fPp8vt2/TNMnLy5u2TL46v99PKBQiPz9/pkuZE3w+n9rSRX6/n3A4TCgUmulSZj3X
      Lpk7Ozv59NNPicfjBAIBHMfBtm3y8/N55JFHcByH4uJiioqKiEQinD9/ntHRUQYGBigtLaW0
      tJSuri4mJye5dOkS5eXltwo0TdavX4/f7+eDDz6YduUvIiJfnWs9gGAwyIcffkhPTw+tra1s
      2rSJbDbLr3/9a2zbprCwkJ07dxIIBNiwYQNvvfUW7777Lu3t7dTV1bFhwwZ27dpFR0cHy5cv
      p7m5mb6+PoqLiwmHw2zfvp29e/dy48YNampq3CpbRMSzDMfFT21NTU2xf/9+nnrqKfx+P47j
      kE6nSaVSRCKRaWP06XSabDY7rWucyWTIZDJfurt84cIFmpubNQTkkr6+PkpKSnJzLvL1dHd3
      s2jRopkuY87o6emhpqZGQ0Bfk2EYhqu31ITDYdauXZs70RuGQSgU+sJfVDAYJBgMTlsWCAQI
      BAJuliQiIn+BqwHg8/moqqpyc5MiInKP6L5JERGPUgCIiHiUAkBExKMUACIiHqUAEBHxKAWA
      iIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEg
      IuJRCgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCI
      iHiUAkBExKMUACIiHuVqADiOQzKZxHEcNzcrIiL3gGsBYNs2IyMjvPXWW4yPj5PNZnEch8nJ
      SXp7exkcHCSVSuE4DplMhsHBQfr6+nKBkc1muX79OlevXiWRSOTWi8fjAFiWRSwWw7Ist0oW
      EfE0v1sbunjxIm+88QZDQ0PcvHmTjRs3UlxczK9+9SvC4TCZTIZ58+axbds2PvzwQ06dOkUo
      FKKoqIhnn32WM2fO0NHRQUFBAcFgkOeff55r167x8ccf853vfIfOzk5Onz7Nc889R3FxsVtl
      i4h4lms9gO7ubqqrq2ltbWX79u2Ul5dz48YN/H4/3//+99m5cyeDg4PEYjFOnjzJjh07+Md/
      /EcSiQR9fX0cP36crVu38k//9E84jsPly5dz2x4eHub9999n7dq1RKNRt0oWEfE013oADzzw
      AK+88gq2bWNZFqFQiOrqaiYnJ/ntb3/L2NgYDQ0NhMNhstks9fX1+P1+KisrGRkZIR6P09zc
      TDAYpL6+nrGxMSorK7l27Rq//vWvaW9vZ/HixZimieM42LY9bf8aGnLP7fZVm7rDcRy1pYt0
      fLrHtQBoamrihRdeYNeuXbz22mts2LCB6upqIpEIlZWV5OXlYVkWqVQKAMMwMAwD0zRzv0jT
      NHP/vz2RHI/HcRyHgoKC3Nc//w/q9hyCJp/dcfsfVzabnelS5oTbx6e4w7Ztstls7nwgX51r
      AWAYBrW1tTQ1NVFZWcm5c+cYGxujoqKC7du3MzExwZ/+9KfcCX1sbIzi4mLGx8epq6vD5/Nx
      8+ZNamtruXnzJvX19RiGwYIFC2hvb2fXrl1UV1dTV1eHaZoEg8Fp+w6FQvh8Prd+HE/z+XwE
      AgFCodBMlzInmKaptnSRz+cjGAyqTV3gWgDs27ePwcFBrl27xvXr11m2bBk1NTWcOnWKo0eP
      Mj4+jmVZFBQUsGDBAg4cOEBlZSWTk5PMmzePpUuXsm/fPlpaWhgcHOTxxx9nZGQEwzBYuHAh
      Dz30EHv27OFb3/qWJoFFRFzgWgCsWrWKrq4uRkZGePjhh1m8eDGhUIgNGzZw7do1gsEg27Zt
      o6SkhMcff5yTJ0+STCZzy9atW8fx48cZHx9nx44dVFRUEAgE8Ptvlfjggw+Sn5+vbp+IiEsM
      x8WB80QiQUdHBxs2bMiduG9P2Nwe77/Ntm0cx5k2bPNFy+7GhQsXaG5u1hCQS/r6+igpKaGg
      oGCmS5kTuru7WbRo0UyXMWf09PRQU1OjIaCvyTAMw7UeAEBeXh6bN2/+/E6+8MT8RVfyuroX
      Efn70RlXRMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQA
      IiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiUAkBExKMUACIiHqUAEBHxKAWA
      iIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEg
      IuJRrgaAZVkMDg5i2/bfXNe2bSzL+pvLRETk3vC7taFUKsWpU6fo6OjgkUceYfHixUxNTdHV
      1ZVbp6CggGXLlpFOp+ns7CSVSrF06VIaGxuZnJzk+PHjTE1NsWTJElpaWhgbG+PGjRssXLiQ
      WCzGxYsXWbhwIfn5+W6VLSLiWa71AE6ePElHRwfxeJy+vj5u3rxJMBgkEokQiURIJpO89957
      JBIJDh48yM2bN8nPz+ftt99mZGSEjo4O+vv7KS0tZc+ePVy/fp2hoSE6OzsBOHToEGfPnsUw
      DLdKFhHxNNd6ALFYjNLSUsrKynj66acJBAIAlJaWAvD666+zcuVKSktLuXTpEj/84Q+JRqMM
      Dw/T29tLV1cX3/ve96isrOT69etcvnyZ4uJistksJ06c4OLFi7z44ouEw2G3ShYR8TTXAqCt
      rY2enh56enr44IMPWL16NYWFhQBcv36d3t5eXnzxRdLpNIZhEI1G8fl8RCIRJicnsW2b4uJi
      AIqKikgkEhQVFXHu3Dm6urr47ne/S0lJCXBrriCbzeb27TgOqVQKn8/n1o/jaZZlkclkSKVS
      M13KnGDbttrSRZZlkU6nZ7qMOcG1ACgvL2fnzp3s2rWLc+fOYVkWGzduxDAMPvroIxYuXEhZ
      WRnZbBbHcchms5imiW3bBINBALLZLMFgEMuyCAaDGIZBXV0dgUCAy5cvs2TJEnw+H4Zh4Pf/
      X+m3/64AcIdpmvh8vmltLF/d549X+XpM08Tv96tNXeBaC/b395NKpcjLy6O5uZnr169jWRbX
      r1/nypUr/MM//AOGYRAIBAiFQly5coWamhoGBgZYtGgRkUiECxcusHjxYnp6eli7di0AxcXF
      7Nixg1/84hccPXqUNWvW5ELgs3w+nwLAJYZh5EJAvj7DMNSWLtLx6R7XAuDKlSscP36cgYEB
      RkZG2LBhAz6fjwsXLjBv3jyi0Whu3RUrVrB3715CoRAlJSXU1tby4IMPsn//fiPZLgoAABPh
      SURBVA4fPkxeXh5NTU309/djmiaFhYVs2rSJd955h6amJqqrq90qW0TEswzHcRw3NpTJZBgZ
      GeHgwYM8+eSTRCIRTNMklUphGEZuSOf2uqOjo6TTacrLywmFQliWxejoKMlkkvLycsLhMNls
      lmw2S15eHpZlkUgkCIfDd3T9Lly4QHNzs64IXNLX10dJSQkFBQUzXcqc0N3dzaJFi2a6jDmj
      p6eHmpoaQqHQTJcyqxmGYbjWAwgEApSUlLB8+XIKCwsxzVt3mH7RXTuBQIDKysppy/x+PxUV
      FXesd/tuotsTxiIi4g5XZ1GCwSBLly51c5MiInKP6FlAIiIepQAQEfEoBYCIiEcpAEREPEoB
      ICLiUQoAERGPUgCIiHiUAkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IA
      iIh4lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQA
      IiIepQAQEfEoBYCIiEcpAEREPEoBICLiUa4GgGVZ9PX1Ydv2HcszmQyO40xbls1m71jv88tE
      ROTe8Lu1oWQyybFjxzhy5Ajr169n2bJlRKNRhoaG6OzsZGpqivnz57N8+XLGxsY4evQoyWSS
      trY2WlpaGB8f58MPPyQWi9Ha2srChQsZHR1laGiIpUuXMjExQXd3N0uWLKGgoMCtskVEPMu1
      ADhx4gQnTpzAsixGRkYYHR0lHA7z5z//mZqaGpYtW4Zt2ziOw4EDBwgEAlRXV7Nv3z5eeOEF
      PvzwQ6ampliwYAFvv/020WiU8fFxTp8+zZIlS3j33XdJpVK0tra6VbKIzBGxb30L5/r1Gdt/
      ZN8+jGBwxvb/VbnaA4hGoxQXF7N9+3YCgQBXrlxhbGyMxx9/nEAgQHl5OT6fj6tXr/KjH/2I
      wsJC+vv76evro7u7m5deeony8nL6+vro6emhpKSETCbD0aNH6e3t5cUXXyQcDrtVsojMEdkP
      P8Tp65u5Aj437D1buBYAK1asoLe3l+7ubg4cOMC6desYHR3lxo0bdHR0kEqlqKqqYv369RiG
      QSQSwTRNCgoKiMViOI5DNBoFoKioiGQyieM4dHV1cebMGV566SWKiooAsG172lyB4zikUilM
      U3Pabshms6TTaXw+30yXMifYtk0ymZzpMuYMy7JIp9PT5hT57J9nQCqVmtH9f1WuBUBpaSnP
      PPMMb7zxBr29vTiOQ11dHQsXLmTnzp3EYjH27t3LxMQEjuOQyWQwTRPLsgiFQgBkMhmCwSCZ
      TIZwOIxhGLS0tBAOh+nq6mLBggUEAgEMw8Dv/7/SDcMgEAjohOUSn89HIBAgOAu7tPcjwzDU
      li4yTfOO4zNpGDNYEQSCQW8PAV25coV0Oo3f76euro6bN2+yfPlyxsfHSSaTuRO6z+cjHA7T
      09NDbW0tAwMDPPDAAxQWFtLd3c0DDzxAT08P69atAyASifDUU0/xq1/9io8++oi1a9fi9/sx
      PvcLN01TPQCXGIaBYRhqT5eoLd11Px6fpmFg3Ef13C3XAmBgYIAPP/yQgYEBGhoa2LRpE5WV
      ldTX1/Ob3/wGv99PdXU15eXltLe38+c//5lAIEBNTQ21tbWsWbOGffv28f7771NSUkJTUxN9
      fX2YpkkkEmHTpk28/fbbtLS0UFNT41bZIiKeZTiOO4NnlmUxMTHBgQMH2LFjR+6K37IsxsfH
      sSyLkpIS/H4/tm0Ti8XIZDIUFxfj8/lwHIdYLEYqlaK4uDi3nm3bBAIBbNsmk8kQCATuSP4L
      Fy7Q3NysISCX9PX1UVJSotttXdLd3c2iRYtmuow5o6enh5qamtzQMcBYff2MTgIXJxIYs+wG
      FcMwDNd6AD6fj0gkwvLlywmHw7mTtN/vp6ys7I51b0/ofqaY3CTwZ9e7fVI3TXPaL1xERL4e
      1wIAIBAI6EpHRGSWmH2zFiIi4goFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQA
      IiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiUAkBExKNcfR+AiNydxP/7f2T2
      75+x/ef/z//gX7VqxvYv9wcFgMgMsM6fxzp6dMb270xOzti+5f6hISAREY9SAIiIeJQCQETE
      oxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiUAkBExKMUACIiHuVqADiO
      QzabxXEcNzcrIiL3gKsBkM1mOXXqFLZt/811U6kUiURi2rJ0Ok08HnezJBER+Qtcexz0yMgI
      b7zxBl1dXZw7d46NGzdSXl7Oq6++ysDAAKZpsmDBAjZv3kxvby9vvfUW6XSa1atXs379evr7
      +3njjTdIJBKsXLmSDRs20N/fz/nz59m6dSt9fX0cPnyYLVu2UFJS4lbZIiKe5VoAHDlyhEwm
      w/z582lra8Pn82FZFpOTk3z729+mvLwcn89HIBBg//79rF+/nvr6el599VXq6+t55513WLVq
      FcuXL+eXv/wl8+bNA2B0dJSpqSl2795Na2sr0WjUrZJFRDzNtSGgiooKRkZGSKVSLFq0iMrK
      SjKZDENDQ1y+fJmRkRH8fj+WZTE1NcXChQspLi6mtraWmzdvMjY2xpIlSygoKKC5uZkbN24A
      MDU1xb59+ygsLGTVqlX4fD63ShYR8TTXegBtbW0kk0n27dvHT37yE5566ikqKipYsWIFg4OD
      HDt2jIaGBjZt2oRpmoTDYUzTJBgMEo/HcRyH/Px8APLy8shkMjiOw9mzZwH4l3/5F8LhMACW
      ZZHJZHL7tm2bRCKBaeqmJjdks1lSqRSGYcx0KXOCZVl3zG1ZljVD1dySSqXIzNL5tmw2SzKZ
      nNaGM33jSSKRgLuY+7zfuBYAoVCIVatWMTg4SCgU4ujRo3zjG99g586dAAwMDPD73/+eZDKJ
      bdvEYjEikQjxeJzq6moMw2BiYoKysjImJycpKyvDMAza29tpaGhg//79lJeXU1JSgs/nm9YT
      ME2TvLw89Q5c4vf7CYVCuUCWr8fn893RljGfj5k8XYRCIQKz9Pfr9/sJh8OEQqHcsrRhMJMR
      kJeXh/H/X6DOJq5dMnd0dHDixAkmJiZyV+P9/f0cPnyYRCLByMhI7oo/Go1y9uxZbty4wcDA
      AGVlZVRUVPDJJ58wNjbGpUuXqKysvFWgabJ69WqKioo4dOgQ6XTarZJFRDzNtQCorq7m4sWL
      XLp0iVAoxMaNGykqKuLixYv893//N++++y6bNm2irKyMHTt2cOrUKV5++WUefvhh5s2bx7Zt
      2zh//jw/+clPWLNmDS0tLRQUFFBbW0swGOSpp54inU4zMjLiVskiIp7m2hBQS0sL1dXV7N+/
      nx07duD339r0iy++SCqVwu/355bV19fzz//8z1iWlRvXr6qq4kc/+hHZbDa3rL6+nvr6egCK
      ior41re+5Va5IiKe51oAAITDYTZs2DBtLN4wjNwJ/bMCgQCBQGB6MZ8JCRERubdcPduapqn7
      9EVEZgndNyki4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJR
      CgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiU
      AkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjXA0Ax3HI
      ZDI4juPmZkVE5B5wNQAymQydnZ3Ytn3H1yzLmrY8lUoRj8enrZNOp5mamnKzJBER+Qv8bm1o
      eHiYP/3pT5w/f56zZ8+yefNm6urqcByH8+fPs2vXLrZs2cKKFSs4ffo0+/fvx7Is2tra2LBh
      A1evXuXNN98knU6zdOlStmzZQl9fH2fPnuWpp57i8uXLHDlyhCeffJKSkhK3yhYR8SzXAuDo
      0aOYpsnChQtZs2YNoVAIgLGxMQ4dOoTf7yeZTALw3nvvsWHDBurr63n11VdpaWnh4MGDPPzw
      wyxbtoxf/vKXXLx4EcMwiMViTE5OsnfvXtrb2ykqKnKrZBERT3NtCKiqqoqhoSHi8Tjz58+n
      vLwc27bp7OykpKSElpYWALLZbG6doqIiqquruXnzJuPj4yxevJj8/Hyam5u5efMmALFYjLfe
      eovS0lJWrlyJaWreWkTEDa71ANra2shms+zZs4f/+Z//4emnnyYYDNLZ2cnOnTv59NNPicfj
      xONxDMMgFAphGAbBYJBEIoHjOOTl5QEQDodzk8nd3d0A/OhHP8r1KizLIpPJ5PZt2zaJRELh
      4JJsNksqlcIwjJkuZU6wLOuO+S7LsmaomltSqRSZz9U0W2SzWZLJ5LQ2nOkbTxKJBHzB3Of9
      zrUACAQCtLa20tvbS15eHidOnCAUCmHbNidPnuTy5csEg0EWLVqE4zjEYjEKCwuJx+NUV1dj
      mibj4+OUl5czMTFBRUUFhmHQ3t5Oc3Mz+/bto7y8nNLSUnw+Hz6fL7dv0zTJy8ubtky+Or/f
      TygUIj8/f6ZLmRN8Pt8dbRnz+ZjJ00UoFCIwS3+/fr+fcDicuyAESBsGMxkBeXl5GOHwDFbw
      1bgWAIcOHSKdTjMyMkJBQQGRSIT169ezZs0aAAzDIBqNUlZWRmlpKZ988gmNjY0MDg6ydu1a
      qqur6ezspK2tjcuXL9Pa2ko6ncY0Tdrb27l69SoHDx7kqaeeIjwLG1pE5H7j2phJQ0MDQ0ND
      9Pf3U1xczIYNGygvL6empoaamhoWLFhAc3Mz4XCY7du3c+nSJd58803Wr19PbW0tW7ZsYWBg
      gFdeeYV169bR1NREYWEh9fX1BAIBtm3bht/vZ2Jiwq2SRUQ8zbUeQGNjIxUVFezfv5/t27fj
      90/f9MqVK3N/rqur46WXXsKyrFw3rqKighdffHHasrq6Ourq6gCIRqPs3LnTrXJFRDzPtQCA
      W5O3mzdvvquxeL/ff0dIfNEyERG5N1w925qmqYlDEZFZQvdNioh4lAJARMSjFAAiIh6lABAR
      8SgFgIiIRykAREQ8Sjfdy12ZfPJJ7K6uGdt/4UcfYVZVzdj+ReYiBYDcFWdwEPvq1ZkrYIaf
      nikyF2kISETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiUAkBExKMU
      ACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgF
      gIiIRykAREQ8ytUAcByHRCKB4zhublZERO4Bv1sbsiyLgYEBDh06xBNPPEFZWRmmaTI0NMT4
      +DihUIjKykoikQipVIr+/n4ymQy1tbUUFhaSyWTo7+8nkUhQV1dHNBollUqRTCYpLi4mnU4z
      MTFBUVERgUDArbJFRDzLtQA4d+4ce/fu5caNG2SzWR577DEikQh79uwhGo0yOTlJNBrlqaee
      oqOjg/Pnz1NQUIDP52Pnzp188skndHZ2UlxczJEjR3jhhRcYHBzk448/5jvf+Q7Hjx/n/Pnz
      PPfccwoAEREXuBYAly9fpra2lqqqKrZu3UokEsHn8/HCCy8QjUbp6+tjz549JBIJTp8+zc6d
      O6msrOS1116jv7+fzs5OtmzZQnNzM7/97W+5fPkyeXl5AAwODnL48GGeffZZCgsL3SpZRMTT
      XAuAtrY2fvOb35BMJlm9ejXRaJRAIMDExATvvPMOp0+f5tFHHyUvLw/Lsqirq8Pv91NRUcHN
      mzdJJpM0NjYSCASYN28e4+PjhMNhrly5ws9//nM2btzIwoULgVtzDbZtT9t/NpvV3INLbNvG
      siyy2Wxu2Uy3bTabxfxMPbOJ4zjT2vL2splkf+73O5s4jnPH8clMH5+WhTEL29O1AKirq+Nb
      3/oWu3bt4s9//jPr1q1j9erV+Hw+CgsLqampIRaLkUqlvvS2TdPEsqzc3z8fALf/bhiGKz+L
      1zmO84UhO5Mc276v6vkyvqgtZ/pSxbZtjFnenvfT8TBb29O1AEilUhQXF1NXV0dVVRWXLl2i
      tbWVyspKamtruXbtGrt37yYWi2EYBsPDw5SVlTE6OkpDQwOBQIDBwUHq6+sZGhpiwYIFGIZB
      Y2MjDz/8MK+99hqVlZXMnz8f0zQxzf+7gckwDILBID6fz60fx9N8Ph9+v59gMJhblpzhcA0E
      g5ifqWc2MU1zWlsCpA0D6y+s//fgDwQIzOL2DAQC09o0PsPHZzAQwJiF7elaAHR0dHDlyhUG
      BgYYHh5mxYoVXL16lY8//piamhquX7+Oz+ejoKCAxYsXs3//fsrKykilUsybN4/W1lb27dvH
      vHnzGB0dpampiRs3bmCaJg0NDaxfv54DBw5QWlpKaWmpW2WLiHiWawHw4IMPUlRURDKZ5Ikn
      nqC5uZl0Ok0sFmNycpLq6mrWr19PcXExjz32GF1dXSSTydz3rV27lkgkwtTUFM8++yxlZWUE
      g0EKCgoAWLFiBdFo9I4rKRER+WpcC4Di4mJaW1tJJpMsWrQIn89HOBzmwQcfxHEcDMPIjdFH
      o1EeeughHMfJDeUUFBSwZs2aacui0SjRaBSAcDjMkiVL3CpXRMTzXAsAuHWSfvTRR6ct++yJ
      /28t/0vrioiI+/QsIBERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJR
      CgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiU
      AkBExKMUACIiHvX/Ad6npfnRdVSWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='CNAD to OpenShift' width='384'>
      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
      tRLRxNkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Digital AI' width='384'>
      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
      USaoJohMKPYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Digital CNAD' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='EMEA AI' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='EMEA AI (2)' width='384'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='EMEA AI TESTING' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdaXAbd57f/3c37psEwRMED/EQSd3UfVte2R6PrZmxPVOerUrNZlVJVR5s
      9sE+zMM8SFWqUvk/SfZRajap2mx2N+Od9Xh2ZMu2ZMsSqYvUQeoWRYn3AfAAAQJoAN3/BzQ7
      5kjyjr0iBQnfVxVKZTS68fs16P50/36/7p9iGIaBEEKIoqIoiqI+70IIIYR4PiQAhBCiSEkA
      CCFEkZIAEEKIIiUBIIQQRUoCQAghipT12xbquk46nV6rsgghhFhD3xoAmqbx8OHDNSrKiymV
      SuF0OlEU5XkXRQjxBLlcDl3Xsdvtz7soBUeRG8H+Za5fv057ezs2m+15F0UI8QTRaJREIkFD
      Q8O3fs4wDHRdR1EUVPXlbx2XG8GEEOJruVyOsbExFhYWnro8l8vxpHNmXdfJZDLkcrkV7xuG
      gaZpj71fKL61CUgIIV52hmEQj8cZHR3l4sWL1NXVsWHDBkpLS7HZbMTjcWKxGLOzs+i6Tmlp
      KbW1tTgcDgBisRgTExPMz8/jcrmor68nGAySzWYZHh5menoah8NBdXU1FRUVAMTjcZLJJOFw
      GMMwSCaTzM7O4vf7CQQCa1Z3CQAhRFFLJBKcP3+e69evMz09zcjICPF4nAMHDuDz+Th//jy3
      b99G13Xy+TypVIp33nmHtrY2EokEJ06cYGxsDL/fTyqVYteuXezdu5d79+7x4Ycf4nK50HUd
      v9/Pu+++i8fjob+/n1u3bvFv/+2/JZ1Oc+XKFfr6+jh8+LAEgBBCrJXh4WHu3r1LQ0MDoVCI
      6upqqqursdlsZrPOwYMHaW1tJZ/P8z//5//k5s2brFu3jvPnzzMxMcHPf/5z6urqSCQSpFIp
      crkcX3zxBXV1dbz33ntMT0/z61//mp6eHg4dOmR+dzabZWBggGvXrtHU1ERLS8ua1l36AIQQ
      Rc1ut+NwOFAUBbvdTn19PZs3byYQCODz+fjBD37Atm3bcLvdLC4uoqoqXq8XRVG4cuUKLS0t
      5HI5BgYGWFhYoKysjFwux6NHj9i3bx8ul4vy8nLa2toYHBwElpqdstkso6Oj9Pb24vP52L17
      95qPVJIrACFEUQuHwzQ0NNDf38/CwgIejwefz0dFRQV2ux2LxUI2m+Xhw4ecPXsWXddpb2/H
      arUyOztrNhlls1kA9u7dS2VlJblczmzzt1gsBINB+vv7gaUAmJqa4vPPPycajfLOO+8QDAbX
      vO5yBSCEKGoul4v9+/ezf/9+3G43V69e5dNPP2VychJd18lms9y4cYOPP/6YbDbLm2++SSQS
      AUBRFJxOJ62trWzbto1cLsdvfvMb8vm8ufyb/+q6DiwFQCaTYWFhAavV+tzuUZAAEEIUPY/H
      Q1tbG62trWzfvp2pqSkePnxILpfj7t27nDlzhvLyco4dO0ZzczNWqxWr1YrL5aKzs5OdO3fS
      2dnJm2++ycjICBaLBYvFQjQaBZaGkM7Pz+P1eoGlK4KGhgbeeecdfD4f586dY2ZmZs3rLQEg
      hChqU1NT3Llzh/HxcTKZDB6PB5vNRj6fR9M0urq68Pv9HDp0iGAwSC6XM8/wGxoauHr1KgsL
      CxiGwfz8PA6HA7vdTlVVFVevXiWTyTA/P8+DBw8Ih8Pm96qqSk1NDbt37yYWi3Hp0iVSqdSa
      1l36AIQQRW12dpbe3l6SySQTExMMDQ3h8XgIh8MkEgmi0SjBYJCenh7zDuHa2lra29vZs2cP
      H330EZ999pnZxr99+3ZcLhe7d+/mzJkzWCwWc3TQ5s2bze9VFAWbzUZzczPRaJQbN25QVVXF
      li1b1qzuEgBCiKJWU1ODpmkMDAwwOztLdXU127dvJxKJkEwm2bFjB/F4HE3TzHXS6TSGYdDS
      0sKRI0e4f/8+o6Oj1NfXs2/fPiwWC9u2bSOVSjE5OYndbufQoUNEIhF0XV9xI5nH42Hr1q04
      HA4sFsua1l2eBfQvJM8CEqKw/aHPApqfn6erq4uWlhaam5u/03dkMhnS6TRer3fFQdwwDFKp
      FKqq4nQ6v0/xV42iKIpcAQghBJijeUpLS7/zug6Hwzyj/yZFUXC73c+ieKtCAkAIIVg6iDc1
      NT3vYqwpGQUkhBBFSgJACCGKVMEHgK7rJJPJJz6DWwghxPdX8AGQTCY5c+bME5fpuk4ikWB+
      fv47TbiwfAv2N4d1CSFEsSnYTuB8Pk9PTw/9/f3cvXuXZDLJ5s2baW1tNe+4+/LLL5mYmEBR
      FEKhEEePHsXpdHL37l0uXbpkbsvn87Fp0yaampp48OABly9fJh6PEwwG6ezsZN26dSSTSa5d
      u0Z1dTVNTU3ous7ly5dZXFxk69atlJSUPMe9IYQQz17BXgHcvn2bL7/8csVDlEZHR4GlyepP
      nTrFo0eP2LhxI1u2bKG0tNR8wNLQ0BDxeJzm5maam5upr68nEAgwNTXF5cuX0TSN9vZ2FhcX
      6enpIRqNkslkGBgYIBaLAXDv3j0uXLhALpfDai3YnBRCiO+tYI9sIyMjZLNZ9u7dy+zsLEeO
      HMEwDAzDIBaLcfXqVX72s5/R3t6Ooiik02kcDgfz8/Mkk0laWlrYs2cPgDnJ85UrV4jH4xw6
      dIiWlhb8fj+9vb2Mjo6aT/cDmJ6epquri2AwyIYNGwp6HK8QQnxfBXsF0NjYSCKR4OLFi+Tz
      eUpLS6moqEDXdaanp0kmk8zNzXHy5Em++OILotEoVqsVTdOYnJxkZGSEK1euMDo6aj6CdWFh
      AbvdTjgcxmazUVNTg8PhMCeB1nWdmZkZvvrqK1KpFNu2baO8vNx8/ocQQrxMCvYKoL6+nrfe
      eovLly8zNjbGX/3VX3H06FEikQhzc3NomsadO3fw+XyMjIxw8+ZNjh07hs/no7Kykrm5OXp7
      e1lYWCASibBnzx40TcNms+FyuQDMWYCWO4Oz2Sxnz54lk8nw6quvUl9fv6L5R9M0M0yWLd/q
      vTwZhBCisMhgj6cr2ABwOBzs2LEDv99vTrDw93//9/zZn/0ZdrudyspKfvCDH+BwOJiZmeH0
      6dPcvHmT1157jVdffRVN08hmswwODtLT08Pt27ex2+3k83nzUa66rqMoivnsDqvVytatW4lG
      owwPDzM3N4fH4zHLZLVanzgc1W63Sz+BEAVquWVAPK6gj1oOh4Py8nKCwSBvv/02//k//2dm
      ZmYIBAKkUilKSkrwer04nU7Ky8uJx+PYbDbKysrMbbhcLkZHR4nH49TW1pLJZJiZmSEcDjM3
      N0cmkzEf0mSxWKitrWXbtm380z/9ExcvXuTIkSPmCKAnNQUtB4gEgBCFSZpwn65g98zp06f5
      3e9+x9DQEPPz89y4cQNFUfD5fNTU1OB0Ojl16hSapjE/P8/o6CilpaWMjIzwf//v/2VkZIR0
      Os3k5CSxWAy/309ZWRm6rnPz5k3m5+e5e/cu2WyW8vJy83tVVaW+vp7du3czMDDAzZs3yWQy
      z3FPCCHE6ijY09aysjK6urro6upibm4ORVF499138fv96LrO66+/zokTJ+jr68MwDMrLy9m+
      fTu5XI6ZmRl++ctfoqoquq7T2NjI1q1b8fl8tLa20tXVxblz57Db7ezbt4/a2loSiQSqqqIo
      ClarlS1btjA5OcmlS5cIh8PU19c/710ihBDPVMHOB5DJZEgkEoyNjXHq1Cl+/vOfEwgEcDqd
      GIaBpmlEo1FisRh2u52KigpKSkrQdZ14PE4ymSSdTmO1WgkGg3i9XlRVJZVKEY1GSSaTeDwe
      QqEQLpeLfD5PIpHA4XCYncTLs/j4/f4nPuoVZD4AIQrdHzofQLEp6PkAlp+vnc/nCQQCK4Zj
      KoqC3W6npqaGyspKc5z/8r+lpaXmjWGwsg3Q7XZTW1uLYRjm52Gpo+j37/b1er3mJM5CCPGy
      KdgAWFZWVsZPf/pT847gZcv//aTO1+Vlv7/OMukUWgWX/hJy6eddij/c7j8H9bv/+T9cuM+n
      I79ZhQKtjib/el4Nv/Wd18unJ1gc+P9WoUSrw+KK4F73Z8+7GC+cgg8Ai8UiZ+EvgvTcixUA
      37PlM6dniWfnnnFhVs9iLvn9VjRyGFrs2RZmFelW3/MuwgtJToWFEKJISQAIIUSRkgAQQogi
      JQEghBBFSgJACCGKlASAEEIUKQkAIYQoUhIAQghRpCQAhBCiSEkACCFEkZIAEEKIrxmGQT6f
      f+LMfy8jCQAhhPhaPp9namqKZPLJz1BanlL2aQFhGMYT5w3P5XLmVLSFpOAfBieEEKvNMAyS
      ySSTk5N0dXXR3NxMW1sbPp8Pi8VCMpkkHo8zOzuLYRiUlJRQWVmJ1Wo1nzqcz+cZHh5G13XW
      rVtnHvgnJyeJRqM4HA4qKyvNR9Unk0kymQyhUAjDMEilUiwsLOD1elfMRb6aJACEEEVvcXGR
      7u5uent7mZyc5MGDB0xOTnLw4EF8Ph/d3d1cv34dTdPMK4D333+fpqYmLBYLAI8ePeIv//Iv
      0XWd//pf/yu6rjMwMMAHH3yAqqoYhkF1dTXvvPMODoeDK1eucP/+fY4fP04mk6G3t5fr169z
      6NAhNm7cuCb1lgAQQhS9hw8fcvPmTRobGykrKyMcDlNRUYHVaiWVShGPxzl8+DBtbW1ks1l+
      +ctfcu3aNerq6rBYLCQSCT766CPC4TDDw8MAaJrGF198QSQS4ac//SkTExN8+OGHXLlyhT17
      9pjNSLlcjoGBAa5du0ZDQwOtra1rVm/pAxBCFD2r1WpOB+t2u2lqaqKzs5NAIIDP5+MnP/kJ
      27dvx+PxkMvlcDgcuN1uFEUhn8/T1dXFwsICb7zxBrDUpJTNZnn06BH79+/H7XZTWVnJ+vXr
      efDggfm9uVyOsbExent78Xg87NmzB7vdvnb1XrNvEkKI52R5dM83fXNK2EgkQjgc5tatW6TT
      aYLBIIFAgLKyMnPWwWw2y+joKGfOnCGVStHR0YHVamV4eJiuri6OHTtGIBAwt59Op8nlclRW
      VgKY85Pfu3cPAF3XmZqa4vTp00xNTXHs2DHKysrWYneY5ApACPHS03WdXC634vXN0Tput5tX
      XnmFffv2YbVa6erq4uTJk0xPT5uduXfv3uWjjz4iHo9z7NgxIpEI6XSaEydOUFZWRiQSYX5+
      HsMwmJ2dJZvNAqyYy3z5imHZwsIC4+Pj2Gw2fL61n9VMAkAI8dKzWCw4HI4Vr9+fT9zn87Fx
      40ba2tro7OxkaGiIR48emW30n332GSUlJbz33nu0trZitVoZGRlhdHQUv9/PxYsXuXbtGtls
      lgsXLqBpGqqqMjMzAyyNElpYWDBH+KiqSktLCz/72c+w2+2cO3eOeDy+pvtFAkAIUfRisRiD
      g4NEo1FyuRyhUAin04mmaWiaxpdffonP5+Po0aOUlZWRz+fRdR2Xy8Xhw4fNIaEWiwXDMLBa
      rRiGQSgUoq+vD03TmJub4+HDh1RXV5vfq6oqkUiEnTt3Mj4+Tk9PD5lMZs3qLX0AQoiiNzEx
      wbVr18hkMkxMTDAyMoLD4aC6uppEIsH09DS1tbX09/ebwz6rq6tpaWmhrq7O3M74+DgXL17k
      tddeI5vNsn37di5evIjNZmN+fp5EIsGrr74K/L8mIbvdTltbG7FYjBs3blBZWUlHR8ea1FsC
      QAhR9Gpra0mn09y7dw9d1wkGg+zcuZNIJEI8HmfTpk3Mz88zMTFhrmO322lqalqxHa/Xy969
      e4GlTt8dO3aQTCZ5+PAhdrud/fv3U19fTz6fp7q6GpvNBiw1P3V2dmK1Ws2+g7UgASCEKHqB
      QIDt27fT1NTEuXPnaG9vZ926dQA4nU5+9KMf/UHb8fl8vPfee8DSGb7f7+ett94ilUqhqiou
      lwtY6pNoaWmhpaXFXLeiooKjR48+45p9OwkAIYT4msPhoKmpiZKSkme2TVVV1+zRDt+VBIAQ
      QnzN5XLR1tb2vIuxZmQUkBBCFCkJACGEKFISAEIIUaQkAIQQokhJAAghRJGSABBCiCIlASCE
      EEVKAkAIIYpUwQeArussLCyY06cJIYR4Ngo+ABKJBKdOnXpiACyHw+zsLLlcbsWybDZLPB4n
      nU4/tl4mkyEej6Np2qqVWwghCl3BPgoin89z/vx5rl69yuDgIPF4nM7OTjZs2GDOuPPpp58y
      Pj6OoiiUl5fzwx/+EJ/Px+joKF988QWxWAyv10tnZydbt27FMAzu3r1Ld3c38XicYDDInj17
      aGlpIZFIcOnSJSKRCK2trei6Tnd3N4lEgp07dxIMBp/3LhFCiGeqYK8A+vr6OHPmDIFAALvd
      jtfrZWpqCgBN08zp2g4dOsSrr75KQ0MDqqoSj8e5ePEiqVSKgwcPEgqF6OnpYWhoiImJCXp6
      enA6nRw4cABVVenp6WFychJN0xgZGWFubg6A27dvc+nSJex2O06n83nuCiGEWBUFewWw/Nzt
      3bt3E41GeeWVV4ClyZ2j0Sg3btzgX/2rf0VzczOKopDJZLDb7QwPDzM0NMQrr7zC5s2bCYVC
      fPnllwwMDFBSUkIymeTIkSM0NTXhcDi4fPkyY2Nj1NfXm989OTnJuXPnqKqqYsOGDeYjXIUQ
      4mVSsAHQ2trKF198wRdffEE2m8Xn82G1Wsnn80xPT7O4uMjo6Cg3btzA5XKxfv16GhoaSKVS
      5HI5GhsbsVqtlJaWEgwGicViWK1WHA4HNTU1WK1WqqqqsNvtJBIJYKlPIRqNMjg4SC6Xo7Oz
      k7KyMhRFec57Qwghnr2CDYBIJMLPfvYzurq6GBkZ4b//9//OW2+9RUNDA3Nzc2QyGe7fv09J
      SQlDQ0PcvHmTY8eOkclkUFUVt9sNLM3KY7PZWFxcRNM0MwRgaUYfRVHMGXiW5/7UNI0333yT
      SCRiTv8GS53Hv98ZbRgGi4uLj00wXWzcBrxIMbm4uIihfvffbC3na30Wcvk8yWTyu6+YeXzw
      RCHTdf2p9ZTBHk9XsEctm83Gpk2b8Hq9JBIJ3G43f/M3f8Nf/MVf4HQ6qamp4Z133sFutzMz
      M8Nnn33G7du3aW5uRtd1NE3D4XCg6zq6ruNwOMwriFwuh91uJ5/PoyiKeZC32+0cOHCAqakp
      BgYGaG9vJxKJrCjTkzgcjqcuKxov0tEfcDid8D0CwJa1r0JpVo9FVb9XH5aOndQqlGe1qMrT
      67l88iceV7ABAEsH5EAgQGlpKT/+8Y/5j//xPxKLxQgEAiQSCZxOJz6fD1VVKSsrY3Fx0Ty7
      n5ycxOfzkUwmmZ+fx+/343Q6yWQyzMzM4Ha7zSuJ5TZ+VVWpqKhgy5YtfPjhh5w/fx6Px2OO
      AFLVx/vMlwPkm1cKovBZVBW+x2+mvmDNgd88wflOnvC3XtAUnlpPacJ9uoL9lT/55BN+/etf
      8/DhQ2ZnZ7lw4QIWi4XS0lLC4TBut5uTJ0+iaRpzc3MMDQ0RCoXwer2UlpZy6dIl5ufnefDg
      AVNTU9TV1REKhdB1nf7+fubm5rh9+zbZbJaKigrzexVFIRwOs2/fPgYHB7lx48YT7yUQQogX
      XcFeAdTW1nLmzBlzLD7Az3/+c7xeL7qu89Zbb/EP//AP9Pb2oqoqdXV17Ny5E7fbzc6dO/nw
      ww+5evUqTqeTHTt20NraimEYtLe3c/r0aU6fPo3X6+WVV16htraWeDyOqqrmGdPmzZuZmJjg
      4sWL1NbW0tjY+Jz3iBBCPFsFGwDLo3rGxsb45JNP+MUvfoHL5TIP0ps2baK+vp5YLIbNZqO8
      vNzs+N2wYQN1dXXE43EcDgelpaVm09C+ffvYsGEDyWQSj8dDIBDAZrMRDAZ57733zM5cm83G
      0aNHOXTokAwDFUK8lAo2AKxWK1arlUAggM/nw+v1mm3wy2fppaWllJSUmO8tt/XZbDZz2Tff
      h6V+hVAoZA7vXF6mKIoZIMscDocZHEII8bIp2ABYFgqF+OM//uPHOnK+eeB+kt8/8P+hy4QQ
      olgUfACoqord/mINvRNCiBdBwY4CEkIIsbokAIQQokhJAAghRJGSABBCiCIlASCEEEVKAkAI
      IYqUBIAQQhQpCQAhhChSEgBCCFGkJACEEKJISQAIIUSRkgAQQogiJQEghBBfMwyDXC6HruvP
      uyhrQgJACCG+lsvlGB4eJh6PP3F5Npslm81iGMYT181kMo8tMwyDTCZDNptdlTL/SxT846CF
      EGK1GYbB7OwsQ0NDXLp0iYaGBjo6OigvL8dmszEzM8PU1BSzs7Pouk4wGGTdunU4HA4SiQRj
      Y2PMzs6SyWQoLS2lsbERr9dLJpPhwYMHTE9P43A4qK2tpaamxvy+ZDJJfX09hmEQj8eJRqME
      g0FKS0vXpN4SAEKIojc/P09XVxe3b99menqaWCxGKpVi//79eDwezp8/z4MHD7BYLORyOeLx
      OD/+8Y9pb2+np6eHvr4+FEVBVVWi0Sj79+/n8OHD3L59mxMnThAIBMjlcvT19fGTn/wEr9fL
      zZs3uX//PsePH2dxcZGenh7u3r3LkSNHJACEEGKtjIyM8ODBA5qamigrK6Ouro6qqirsdjvZ
      bBar1corr7xCU1MT2WyWv/qrv+L27du0tLSQTqfZu3cv69evx2q18uGHH3LhwgX27dvHV199
      RVNTEz/60Y+YnJzko48+4sqVKxw8eNBsKtI0jbt373Lz5k3a2tpYt27dmtVbAkAIUfRcLhcO
      h4NsNovFYqG2tpbW1lYURcEwDI4ePYqqqhiGQSwWwzAMAoEAiqLw+uuvm9PMRqNRMpkMJSUl
      aJrG6Ogox44dw+l0Ul5eTktLC48ePeLgwYPAUp/Co0ePuHr1KsFgkB07dmCz2das3hIAQoiX
      nq7rj3XCWiwWVHVpHExNTQ1NTU309/czNzeHx+PB6XRSXV2N3W7HYrGgaRr37t3j3Llz2O12
      2tvbsdlsZjA8ePCA7u5uJiYmeOutt0in0+TzeUKhEABWq5VAIEAymTTLNDY2xueff04ikeCd
      d96hpKRkTfeLjAISQhQFwzAeey1zuVzs3buX/fv34/P5uHnzJp999hmTk5Pouo6maVy9epXP
      PvsMu93Om2++SU1NjXnwv3PnDr/97W+Zm5vjzTffpKOj44llWL6iWKbrOrlcDlVVURRl1ffB
      75MrACHES09VVex2+7d+xuPx0NLSwsjICE6nk2vXrjE8PExlZSU3b97k3Llz1NfXc/DgQcrK
      ysyrh5GREU6cOEFpaSmvvfYa4XAYwzBwOp1YLBZisRher5dcLsfc3Bxer9csU0NDA0ePHuXT
      Tz+lq6uLQCBAWVnZqu+PZXIFIIQoeuPj4/T39zM2NkY6ncZut6Oqqnn239XVRXl5Ofv27cPv
      95PNZsnn8xiGQXd3N/l8ntdee41QKISmaeTzeWw2G1VVVVy5coV0Os3MzAyDg4OEw2HzexVF
      oaamhp07dzI3N8elS5dIpVJrVm+5AhBCFL14PE5fXx/z8/NMTk4yPDxMaWkp4XCYhYUFZmZm
      ADh79qx55l9fX8+mTZu4c+cONpuN8+fPm804Xq+XI0eOsGvXLr788kvy+TzJZJJcLsemTZsA
      zGGjNpuN5uZmYrEYN27coKqqiq1bt65JvSUAhBBFLxwOo+s6Dx48YHFxkbq6OrZt20ZNTQ3J
      ZJKDBw+SSCRWrLPcbr9nzx40TVuxzGq1YrVa2bx5M9lslqmpKQKBANu3byccDpPP52loaCAQ
      CABLzU9bt27F4/HgcrnWrN4SAEKIouf1emlvb6empgZFUVaMx3c4HBw+fPip67722mvfut2D
      Bw+SyWRQVRWHwwEshUddXR11dXXmZ4PBILt3735GNfrDSAAIIcTXnE4nHR0dz/ROXFVV1/Ss
      /ruQABBCiK85HA4aGhqedzHWjIwCEkKIIiUBIIQQRUoCQAghipQEgBBCFCkJACGEKFISAEII
      UaQKPgDy+TzxePyJc3AKIYT4/go+ABKJBJ988skzDYB0Os38/DyZTOaZbVMIIV40BXsjWD6f
      58yZM/T09DA6Osrs7Cy7d+9my5YtaJrGZ599Rn9/v/n50tJSfvSjHxEIBOjr6+P06dPmskAg
      wJ49e+jo6ODWrVt89dVXzM/PEwwGOXjwIO3t7SwsLNDV1UV9fT0dHR3m9ycSCfbu3WtO6iCE
      EC+Lgg2AK1eucO7cOVpaWpidnaW6uppYLAYshcPg4CBNTU20t7cDYLfb8fv9aJrG5OQkJSUl
      HDhwwFwWCoUYGxujt7eXUCjE4cOH6evro7e3l5KSEhwOB1NTU+azuG/cuMGVK1fYuXMnHo/n
      +ewEIYRYRQUbANPT09hsNnbu3MnExASvvPKKuUzXdWZmZjhy5Ajr168331dVlWQyyeLiIg0N
      Deay5fk67969Szqd5sCBAzQ2NqIoChcuXGB8fHzF7d/j4+OcO3eOSCRCe3s7TqdzraothBBr
      pmADoKOjg9OnT3PixAkymQwulwur1YphGKTTaaLRKNevX2dycpLGxkYikQiKoqBpGuPj40xM
      TGCz2aipqaG+vh6bzUYymcThcFBVVYXFYqGiogKHw7Fijs6pqSnu3LmDoih0dnYSDAafy1Rt
      Qgix2go2AMLhMH/yJ3/C6dOnGRoa4r/8l//CT37yE9avX4/VajX7Aq5cucLnn39OfX09P//5
      z3E6nTQ0NDAzM0N/fz+nT58mHA5z5MgRNE3DarWaU8Mt/7v8LG9N0zh16hS5XI4f/ehHhMNh
      c/IHgEwmg67rK8ppGAbJZBKrtWB35ZrwGPAixWQymcRQv/tvls6kV6E0qyeXyz32HPs/iLZ2
      s1I9C3pef2o9ZbDH0xXsUctqtbJ+/XpcLheLi4uEQiH++q//mv/wH/4DPp+P999/H8MwyOVy
      PHr0iA8++ICbN2+yc+dOXn/9dfL5vDnBw+nTp7lz5w5er5d8Pk8ul8Nut5PL5VAUBZvNBiw9
      CfCNN95gYmKCW7du0dLSQn19vVkmu93+xNFILpfL3EbRepGO/oDL7YbvEQCOnNCUaV8AACAA
      SURBVGMVSrN6LFYrbrf7O6+nq04WV6E8q0VV1afWM5VKkc1m17hEL4aCHgZq/fqP1+/38+67
      7zI3N0c0GkVVVTweD16vl0AgQG1tLeFwmHg8bj572+v14vf7iUQihMNhFhcXcTqdZvMRwMzM
      DOl02mzjVxSFkpISXn/9dQC6urrMjufl5aqqrng96b1ifL1gx3/U7/m7vWjNgQoURT1Rnl7P
      F64ua6hgA+Cjjz7i7/7u7xgYGCAWi/H5559jsVgIBAJcv36d//N//g+Tk5Nomsb9+/eZmJgg
      FAoxODjI//gf/4PBwUFSqRTDw8OMjo5SWlpKKBTCMAz6+vqYmZnh1q1b5HI5Kisrze9VFIXK
      ykoOHz7Mo0eP6OvrW9NJmoUQYq0UbBNQS0sLp06doru7m3Q6jWEY/Mmf/Ak+n4+SkhLGxsb4
      T//pPwFLTTf79+9n06ZNzMzMoOs6/+2//Td0XcdqtdLZ2cmuXbtwuVxs3LiRjz/+mE8++YTS
      0lLeeOMNIpEIc3NzWCwW86xhw4YNjI+Pc+HCBSKRCE1NTd+5DlpO51fXo89616wap03l3U1y
      v4MQxaJgA6C1tZXm5mYmJib47W9/y/Hjx7FarSiKQiQS4c///M/JZDIsLCzg9/txOp2oqkp5
      eTnHjx8nm82STqexWCx4PB6zM3f//v1s3bqVVCqFy+XC4/GgKAplZWX88R//sXm5aLFYOHr0
      KH/0R3+0oiP4uzCArP7iPMLC+gKVVQjxL1ewAbB8Jm6323G73Vit1hUHYqvVitVqNW/S+mY7
      n8ViwWKxrGjbX6YoCl6vF6/X+8T1vun3/1sIIV4mBRsAyyoqKvjFL37x2Pvf1rHzz3X6SKeQ
      EEIUcCewEEKI1SUBIIQQRUoCQAghipQEgBBCFCkJACGEKFISAEIIUaQkAIQQokhJAAghRJGS
      ABBCiCIlASCEEEVKAkAIIYqUBIAQQhQpCQAhhChSEgBCCFGkJACEEKJISQAIIcTXDMNA0zTy
      +fzzLsqakAAQQoivZbNZHjx4wNzc3BOXZzIZMpkMhvH49KmpVIpMJvPY+7quk0ql0DTtmZf3
      X6rgZwQTQojVZhgGk5OT3Lt3j6tXrxKJRNi4cSO1tbU4HA4mJiYYGhoiFothGAZlZWVs2rQJ
      t9tNNpulv7+f0dFRVFWlrq6Ojo4OVFVlcXGRvr4+pqamcDqdNDQ00NzcjK7rTE5OMj8/T0dH
      B4ZhEIvFGB0dpaqqisrKyjWptwSAEKLoxWIxurq6GBoaIhqNks1msVqtlJaWous658+fZ3p6
      Go/HQy6X48qVK1itVrZs2cKdO3c4efIkdXV15HI5+vv78Xq9RCIR+vr6+PLLL4lEIkSjUQYG
      BvB4PASDQQYGBrh//z4dHR0sLCxw6dIlhoeHOXr06JrVW5qAhBBFb3x8nNHRUZqammhtbWXH
      jh20tbXhdDoxDIOKigqOHDnCu+++y3vvvYff72dwcJBcLseZM2eIRCK88847vPvuu/j9fs6f
      P4+maXR3d9PW1sZ7773HG2+8gaqqXLt2DcBsRspkMty6dcsMg0gksmb1lgAQQhQ9n8+H3W5n
      dnaWbDZLRUUFTU1NeDwe3G43e/fupbm5GYfDwdjYGOl0mrKyMgCGhobYsWMHDocDj8fDtm3b
      ePDgAZqmMTk5SWdnJw6Hg9LSUtatW8fIyIj5vZlMhvv373Pt2jVqamrYsmULNpttzeotTUBC
      iJeeruuPdcJaLBYsFgsA1dXVbNq0iatXrzIxMYHVunRobGxsxOFwoCgK6XSa69evc+HCBcrL
      y2lvbyefz5PNZikrK0NRFADKysqIx+Ok02ny+TzBYBAAq9WK3+8nmUyaZRoZGeHkyZMYhsEP
      fvADfD7fWu0SQK4AhBBFQlGUFa9vcjgcbNu2jQMHDlBeXs74+DinT59mdHQUXdfJZDKcP3+e
      s2fPUlVVxWuvvUZFRYUZILqum9vSdR1VVVFV9bFlhmGs+G6n02n2MywHw1qSABBCvPRUVcVm
      s614LR+8l7lcLurq6ohEIuzatYuFhQXGxsbIZrP09vbS29vLhg0bOHr0KDU1NVgsFhwOB06n
      k4mJCbNNf2JigkAggNPpxGq1MjU1BSwNMZ2ZmTHP8lVVpaamhtdff52Kigq6u7uZmJhY2/2y
      pt8mhBAF6NGjR1y4cIHBwUESiYTZfKOqKtlslsuXLxOJRNi6dStOp9O8WUxRFNatW8fFixdZ
      XFxkfn6e3t5eWlpasNlshMNhLl26RCqVYnp6moGBAerq6szvVRSFiooKduzYQSaT4cKFCyQS
      iTWrt/QBCCGKXjabZXBwkMnJSaampvB4PITDYerq6pibm2Nubo5MJsNvf/tbswmnubmZPXv2
      cOjQIT744AP+7u/+zuwT2L17NzabjX379vHxxx/zN3/zN2iaht1uZ/PmzcDSwV9VVaxWK42N
      jczOztLb28uNGzfYvXv3mtRbAkAIUfTC4TBWq5Xh4WH6+/tpaGhg8+bNVFRUkEqlePvtt0ml
      UivWCYVCqKrKunXrOHbsGOPj4yiKQm1tLTU1NSiKQnt7O4qiEI1Gsdls1NXVUV5ejq7rrF+/
      npqaGmCp+WnTpk2Ulpbi9XrXrN4SAEKIoudyuWhoaKC0tJREIsH69esJh8MA2Gw2tm3b9q3r
      b9y4kZaWFhRFwW63r9ju1q1b0TTN7IeApfb/ysrKFXf8+v1+Ojo6VqF2TycBIIQQX3O73Wzb
      tu17Dcd0OBxPfF9RlKcue94kAIQQ4ms2m42qqqrnXYw1I6OAhBCiSEkACCFEkZIAEEKIIiUB
      IIQQRargAyCfzzM/P//EGXiEEEJ8fwU7CkjXdcbGxhgeHqa3t5fDhw9TVVVFKBQin88zPDxM
      LBYzP+90OmlsbMTpdJJIJBgcHCQej+NyuaitraWiogKAmZkZhoaGWFxcNCdtCAaDaJrG+Pg4
      fr+fYDCIYRiMjo6SzWapqqrC5XI9r10hhBCromADYHJykt/97nfMzs4yPj4OLN1scfjwYbLZ
      LJ9++inT09PmM7n9fr95kL9y5QoXLlzA7/ejaRqVlZW89tprKIrC+fPnuXv3Lm63m1QqRVtb
      GwcOHCCTyfDll1/S3t7Orl27mJ6e5uTJkwQCAY4cOSIBIIR46RRsANy4cYOxsTF++MMfcurU
      Kf7oj/7IfKyqruvMzc1x9OhRNm3aBGDegTc+Pk5/fz9btmzh0KFD3Lt3j66uLu7evYvH42F4
      eJi9e/eyZcsWLl++zJ07dxgeHjbDAyCRSNDd3U0mk2Hz5s0EAoHnsg+EEGI1FWwfgN/vNydV
      djgctLS0mJMnZ7NZYrEYmUyGqakpMpkMdrsdRVFIJpMkk0k2bdqEy+UiHA5TUVHB2NgYc3Nz
      2Gw2WlpacLvdrFu3DofDwczMDLD0rO5kMsnVq1d59OgRW7duJRKJPPbYWCGEeBkU7BVAe3s7
      t2/f5vLly8zMzNDV1UV7eztlZWXouo7X62VgYIAHDx7g8XhobGyko6ODTCaDoiiUlJQAS7dn
      u1wupqen8fv92O1282FLHo8Hi8VCJpMBIJfL0dfXx/z8PG1tbeacoMtyudxjndHLgfSkTups
      /sXquDYM47FZk/5QNkD5Zz9VOLRsFr7H75PL5VahNKvnSTNh/SGM7ItVz2/7283n82tcmhdH
      wQaAz+fjxz/+MRcuXOD06dN0d3czMjLCT3/6U1wuFz/84Q/NEULDw8N8/PHHz2Q6NV3XURQF
      wzCeeLB/0oFe1/UVs/78v/dfrAAAnliPP8gLVtWlen73ur5oo9EMvt9vahjf8+/geTGeXs8X
      7TdbSwUbAACBQIDNmzdz9+5ddu3axV//9V9z9OhRysvL6ezsBJZ+3PHxcf73//7fjIyMEIlE
      MAyDubk53G43mUyGVCqFz+czJ3JIJBI4nU6SyST5fN58UJPNZmP37t2oqkp3dzd9fX3s3LkT
      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
      JEmPDAL/H7cCy06RDZYTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='EMEA CNAD' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='GDC AI' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='GDC CNAD' width='384'>
      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
      7dTV1dHe3k5lZSVw4xu5traWpUuX8t577zF79mxyc3MxDCM1tpt//vwy+WY0h3duus3hdBnH
      N6E5vDNpC0AsFuPDDz/k0qVLjI2NsWLFCvLz8/nXf/1XxsfHuXr1Kv/8z//MypUr6e/vJxgM
      sm7dOpqamvjVr36F4zgsX76ckpISHn30Uf7zP/+T48ePEwwG2bRpE5Zl8eqrr/Lyyy9jGAY/
      /OEPb+yQz4fX62XZsmX09vayf/9+Nm3alK7dFBGZsQwnzT+l9eabb/LUU08RCARu+/FoNMpr
      r73Gs88+S3FxMY7jEIvFcByHnJycVFEty2JycpJgMIjX6wVu3PCNRqNkZ2ffconnq8Tjcfr7
      +6mrq7vj/XMr0zSJxWK3vZkvX8/AwAA5OTkUFBSklpmtrUS3bLnrYzHuuYfC3t67vt07NTg4
      SCAQmHJpOfLCCyRef/2ujyXw058SfOmlu77db8swDCNtZwA3LV26FJ/vyzfj9XrZuHEjxcXF
      Nwd12+toPp/vllf0eDwevcpHRORbSnsAGhoavvLj2dnZVFVVpXsYIiLyBXozOBERl1IARERc
      SgEQEXEpBUBExKUUABERl1IARERcSgEQEXEpBUBExKUUABERl1IARERcSgEQEXEpBUBExKUU
      ABERl1IARERcSgEQEXEpBUBExKUUABERl1IARERcSgEQEXEpBUBExKUUABERl1IARERcSgEQ
      EXEpBUBExKUUABERl1IARERcSgEQEXEpBUBExKUUABERl1IARERcSgEQEXEpBUBExKUUABER
      l1IARERcSgEQEXEpBUBExKUUABERl1IARERcSgEQEXEpBUBExKUUABERl8poABzHYWJiAtu2
      MzkMERFX8mVqw8lkku7ubg4ePMiSJUuor68nGAwyNDREb28vAFVVVZSWlmLbNpcuXSIcDlNe
      Xk51dTWO49DT08Pg4CDFxcXU1tYCMDg4SGVlJYZhMDQ0RCAQoLCwMFO7KSIybWXsDODy5cvs
      2LGDjo4O2tra6OzsJBqN8tZbb3H+/Hk+++wzdu7cycjICBcuXGDXrl10dnayc+dO+vv76erq
      4u2336arq4tdu3bR0dFBJBJh586dJJNJhoaG+O///m+uXr2aqV0UEZnWMhaArq4uiouLWbRo
      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
      ajKJ10UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='LATAM AI' width='384'>
      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
      IiH1/wBMtuXpBovKcAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='LATAM CNAD' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='NA COMM AI' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='NA COMM CNAD' width='384'>
      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
      s2dZvnz5Z56PLygooLq6ms2bNzM+Ps7evXtJJpPYtk0oFKKgoIBIJEJlZSWmaTIyMkIwGGR0
      dJSysjIMw2DNmjUsWrSIlpYWSkpKKC0txeVyTfqRDcXFxaxaterLrYSk5efnaz0zSOuZWSUl
      JSxbtmzS38GxYzFS7e1Zm8nIzcVcuDBr+/8izpw5M/MAXL58mfPnz9Pf308gEMDlcqV/3s7I
      yAjxeJzBwUHy8vK4du0aPp+PiooKxsbG+PDDD8nJySEWi5GTk0MwGOT06dPU1NQwMDDAo48+
      SlVVFe+99x4rVqzg448/ZvXq1emf6bN69Wq6urp488032b17N4FAYNJsTz75JN/4xjcyvkBO
      1d7ezgcffJDtMe4bWs/M6uzs5Cc/+Qk+ny+9zfroI8aWL8/aTO5168h/++2s7f+LMAxj5m8D
      DQaD+Hw+RkZGiMVibN++ndzcXF577TXeeecd8vLy+POf/0xHRwf79+9neHiYnJwctm/fzunT
      pzly5AgbN26krKyM5uZm+vr6OHz4MJs2baKiooKtW7cyOjrKa6+9xmOPPUZtbS2FhYU0NDTg
      drvZtm0b+fn5X/ptoiIicoth3+VfZ33llVdobm5On6//tJGREQ4fPsyOHTvw+XzYtp0+n3/7
      vD/cestlKpVKn9eHW+f2k8nkpLLPxODgICUlJXd1H7mz9vZ2lixZku0x7htaz8zq7OyksrJy
      dh0BbN48F48AjLv+m8Dbt2+f9KT9aQUFBezcuROPx3N7J9Pefrqf0fPpc/siInLv3HUAPu/V
      uWma+rEIIiJzgJ6pRUQcSgEQEXEoBUBExKEUABERh1IAREQcSgEQEXEoBUBExKEUABERh1IA
      REQcSgEQEXEoBUBExKEUABERh1IAREQcSgEQEXEoBUBExKEUABERh1IAREQcSgEQEXEoBUBE
      xKEUABERh1IAREQcSgEQEXEoBUBExKEUABERh1IAREQcSgEQEXEoBUBExKEUABERh1IAREQc
      SgEQEXEoBUBExKEUABERh1IAREQcSgEQEXEoBUBExKEUABERh1IAREQcSgEQEXEoBUBExKEU
      ABERh7rrAIyOjmJZ1pTttm1/5v1s2550m0///va2VCp1tyOJiMgXMOMAWJZFV1cXv/3tbzl1
      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
    </thumbnail>
    <thumbnail height='384' name='NA PS AI' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dW2xUd4Ln8e+5VJXLVb7bGPAdiCEQyAUIpLsdsIFAQrqTkM0k0w9z0ezD
      9mhWrVGPNK+jXe3LqB9WamlGWml2W5ppaZIZTS4kdE8whFy5pkkaaBLAxpir77dyuW7nnH3I
      4IkDnZCGctn+/z4SUjip8vmff/1d36pzCtsKgiBARESMYlmWZRd6ECIiUhgKgIiIoRQAERFD
      KQAiIoZa0AFIpVKFHsKC4Ps+mUym0MNYELQm7w2tyXtjQQegt7e30ENYEFKpFH19fYUexoKg
      NXlvZDIZbty4UehhzHsLOgAiIvK7KQAiIoZSAGZZEARMTk6STqf56r/B8zzvlm3yu2UyGSYn
      J2fMWRAEZDIZpqamNJd3KAgCksnkjDUZBAG5XI5EIkEulyvwCOeP261J+GI+Pc/D9/0Cjez2
      3EIPwCSTk5O8+eabXLlyBYDvfe97bNiwAd/3OXPmDO+99x7PPvssjY2NBR7p3JbNZjl+/DjH
      jh3D933q6+t5+umnAXj//fc5c+YMnuexevVqnnzySWxbr3N+l2Qyyb59+7h06RIAjz32GJs2
      baKnp4d9+/aRzWYJh8Ns376dlStXYllWgUc8N2WzWU6cOMGxY8fwPI+6ujp2795NPB4H4PLl
      y/zbv/0bbW1trF+/vsCj/U8KwCzxfZ9Dhw5h2zY/+tGPmJiY4OWXX6ayspJ4PM6ZM2dIp9NM
      TU0VeqhzXk9PD5988gnPP/885eXlvP766xw+fJg1a9YQjUb5sz/7M6ampvj5z3/Od77zHSoq
      Kgo95DnJ933ee+89crkcP/rRj0gkErz88stUVVVRUVHBnj17WLx4MUeOHOHo0aMsX76cUChU
      6GHPSZcvX+bkyZM8++yzVFVVsXfvXj766COeeOIJPM/j3XffZWxsbM59ckkvjWZJOp3m+vXr
      PPbYYxQXF1NbW8uKFSu4du0aixYt4oUXXqCpqUmvsO5AX18fTU1NLF26lJKSEjZt2kR3dze1
      tbW0tbURi8W4dOkSkUiEaDRa6OHOWZlMZsaaXLRoEa2trVy9epWamhqKioo4e/YsZ8+epaGh
      AcdxCj3kOau/v5/6+nrq6+uJx+M8+uij9PT0APCb3/yGXC7Hgw8+OOe+vxWAWeJ5HpZlUVxc
      PL0tHo+TTqdxHIdwOFzA0c0vuVyOWCw2fWqntLSUVCqFZVmkUineeOMNjh8/zvPPP08kEinw
      aOeu263JkpIS0uk0vu/z61//mn379tHX16fTkt8gm83OWJMlJSWkUimuXLnC/v376ejowHVd
      0un0nLqmogDMklAohGVZjIyMTG8bHh4mFosVcFTzUzQaZXR0dPobaWBggNLSUrLZLAcPHmR8
      fJwXX3yRhoaGOfeKay65uSaHh4entw0ODhKLxXAchx07dvDjH/+YrVu38u677+r05NcoLi6+
      ZU3G43G6u7unrw98/vnnnDp1isuXLxd4tP9JAZgl4XCY5uZm3nvvPcbGxujp6aGrq4vGxkZy
      uRypVIpcLkcmkyGTyegTLF9j8eLFXL58mZ6eHoaGhvjwww9ZtWoVAwMDfPbZZ+zYsYOioiIm
      JyfxPK/Qw52zQqEQzc3NfPDBB4yNjXHp0iUuXLhAc3MzJ06c4PLlywRBgGVZZLPZOfcJlrlk
      0aJFXLt2je7uboaHh/noo49YuXIlDz74IH/0R3/Epk2baGxsZNmyZVRXVxd6uNN0EXiWWJbF
      448/zttvv80//MM/kMvlKCoqoqysjE8++YQjR44AcOjQIc6fP8+2bdsoLS0t8KjnpoaGBrZu
      3cr+/ftJJBJMTEywc+dOUqkU5eXlvPrqq8AX7xSee+45KisrCzziucmyLL773e+SSqWm12Q4
      HKa8vJzR0VHeeOMN0uk0JSUl7Ny5k5KSkkIPec6qq6ujvb2dgwcPMjExwcTEBB0dHZSVlVFW
      VgZAa2srsVhsTs2jtZB/Icy5c+dobW0t9DBmCIKAVCpFJpPh0KFDrF69mhUrVszpUxXJZJKh
      oSEaGhoKPZQZstksU1NTnDp1Cs/z+N73vjfnP/I5V9dkOp0mnU7z7rvvsnLlSlpbW/E8j1wu
      RygUmnMXgFOpFP39/XPu2sTNNXnzU32PP/74nF2TlmVZegcwyyzLIhqNEo1G2bVr15x+4p/r
      QqEQoVCITZs2kcvlNJe/J8uyKCoqoqioiJ07d07Po+u6uK6eIr6Nm2ty48aN82JN6tEtIH1C
      5d7QE9W9ozV5b8yXNTn3R3gXstksXV1dhR7GvOd5Hul0es79I5b5KJlMak3eAzfXpOby7izo
      ALiuS1NTU6GHMe+lUimGh4dZunRpoYcy73V1dWlN3gPpdJqBgQHq6+sLPZR5bUEHwLKsefE2
      bK6zbVtzeY9oHu+NXC6Hbduay7s0Ny9Pi4hI3ikAIiKGUgBERAylAIiIGEoBEBExlAIgImIo
      BUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAR
      EUMpACIihlIAREQMpV+oKSILQvr//l9S//N/FmTfzqZNxP/5nwuy77uhAIjIghCMj+P39BRk
      33ZjY0H2e7dm5RSQ7/skk8nZ2JWIiNyhvL4DCIKAVCpFb28vhw8fZufOnVRXV5PJZLh27Rrj
      4+PE43Hq6+uJRqMMDg4yNjYGQCQSYcmSJUxNTXHp0iUAGhsbKS0tZWxsDMuyKC0tJZFIkEgk
      qK2txbZ1SUNE5E7lNQC+73PkyBFOnTrF4OAgH330EVu2bGFwcJATJ05QXl7O9evXaW5uZvPm
      zRw4cIB0Ok1ZWRkVFRWUlZXxzjvvMDY2huM4nDt3jl27dvHrX/+aSCTCxo0b6ezsxHVdnnrq
      qXweiojIgpP3AFy5coWVK1dSXV3Njh07iEaj06/6w+Ewx48f58qVK6RSKXzfZ8uWLdTV1eE4
      DolEgmvXrrFnzx5c12Xv3r0MDw8DX7y7OHPmDH19fTz//PN69S8i8i3lNQCu67J27VoOHDiA
      7/sMDAzQ2NiI67qcO3eOTz75hJ6eHvbs2YPjOIyNjfHOO+9QUVHBmjVriMVihEIhqqqq8H2f
      WCxGKpXC8zw+/fRThoeH+eEPf0hNTQ3wRXB835/efxAEZLPZfB6iETzPw/d9zeU9oDV5b+Ry
      uVvWpO95BRvPfH1c8xoAy7J44IEHiEQivPHGG7z11ls8+eSTLFu2bPpdQDKZpK+vj+XLl7N7
      925SqRRdXV388pe/ZOfOncAXkxsEwYyvG41GcV2XdDr9tWP48v3k93NzDjWXd++ra1l+P7db
      k4Wc1YD5+f2R94vAk5OTlJeX09TURDgc5urVq9TX11NXV0dTUxPV1dUcPXqUjRs3Ul5eTjwe
      p7KykkuXLuE4DplMhuHhYVzXZXJykqKiImzbZuXKlWzatImDBw9SWlpKXV0dtm3POBVkWRbh
      cDifh2iEXC6Hbduay3tA83hv+L5/y1z6jlOw8djz9LkmrwHI5XIcPHiQoaEhrly5Qm1tLQ8+
      +CAnT57kypUrVFRUcOnSJaqqqhgfH+eXv/wldXV1jI+PE4vFqKqqYsmSJezfvx/XdafjAF88
      ube2ttLb28uhQ4d46aWXcF39swYRkTuV92sAbW1t0x/jfPLJJ6mtraWsrIzi4mKSySQbN26k
      ubmZaDTKtm3bGBkZYfHixTQ2NlJeXk5HRwddXV34vs/y5cspLi5m3bp1OI5DKBSira2NGzdu
      6CKwiMi3lPdrANXV1USjUXK5HHV1dQBUV1dTVVU143YALS0ttLS0zNhWXl7OI488MmNbdXX1
      9H3j8TgrVqzI52GIiCxIs3LOJBaLsWnTphnbbj6Zf9O2r9suIiK/P503ERExlAIgImIoBUBE
      xFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMp
      ACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiI
      GEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigF
      QETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABER
      QykAIiKGUgBERAylAIiIGEoBEBExlAIgImKoWQmA7/skk8nZ2JWIiNwhN59fPAgC0uk0vb29
      HD58mJ07d1JVVUU2m+XatWuMj49TUlLC0qVLKS4uZnx8nN7eXlzXpaGhgVgsRiKRoLe3F4CG
      hgZKSkoYHx/HsixKSkqYnJxkcnKSmpoabFtvaERE7lReA+D7PkeOHOHTTz9laGiIDz/8kK1b
      tzIwMMDx48cpKyvjxo0btLS0sHnzZt5++21SqRS5XI6uri62bt3KgQMHGB0dxXEcPvvsM3bt
      2sXHH39MJBJh48aNdHZ24jgOTz31VD4PRURkwcl7AHp7e7n//vsZHBxk+/btFBcXU1xcTF1d
      HUVFRRw/fpze3l5GRkYYHR1lz549pFIpfvWrXzEwMMDVq1d5/vnncRyHN998k+HhYeCLdxdn
      z57l+vXrPP/883r1LyLyLeU1AI7jsHbtWg4cOADA0NAQxcXFhMNhLly4wCeffMLFixd57rnn
      yGQyxGIxysrKiEajuK7L2NgY4XCYqqoqfN8nFouRSqXwPI/f/OY3DA0N8Yd/+IcsWrQI+CI4
      vu9P7z8IArLZbD4P0Qie5+H7vubyHtCavDdyudwta9L3vIKNZ74+rnkNgG3brF27lqKiIl5/
      /XXefPNNnnrqKVpaWiguLmbJkiUkEgkGBgaor6+/5f6WZQFfTG4QBDO2RyIRXNclk8lMb//q
      7b76d/n93JxDzeXd05q8N263Jgs5qwHz8/sj7xeBk8kkFRUVNDc3Ew6HuXLlCnV1ddTX19Pc
      3MyiRYs4evQozc3NTE5OMjY2RjqdJpfLUVJSQiaTYWRkBMdxmJycpKioCNu2WbVqFY8++ijv
      vPMOZWVlLF26FMdxcBxnev+2bRMOh/N5iEbI5XKay3tE83hv+L5/y1z6X/ren222Zc3LxzWv
      AcjlcnR2djIyMsLly5epra1l3bp1nDx5kqtXr1JZWUlPTw+VlZVUVlZSUlJCZ2cn2WyW6upq
      ampqWLJkCfv378d1XWKxGJWVlcAX7wJWrVrF5cuXeeedd3jppZdw3bwejojIgpLXZ0zXdWlr
      a6Onpwff99m1axeLFy+mvLycaDTK5OQk69evp7m5mbKyMnbs2EFXVxe2bbNixQri8Tjt7e10
      dXXh+z7Lly+nuLiYdevWYds2oVCItrY2rl+/Pn26SERE7kxeA2BZFjU1NRQXF+N5Hg0NDQBU
      V1dTVVU143YAVVVVM17hA1RUVLB+/foZ26qrq6fvW1JSQklJST4PQ0RkQZqVcyaxWIzNmzfP
      2Pa7XrHfbrte3YuI3Hv68LyIiKEUABERQykAIiKG0ucmRQos8fzzeCdOFGTfRf/jfxD54z8u
      yL6l8BQAkQLzb9zA/4+feDvbgomJguxX5gadAhIRMZQC8DU8zyOZTM74AXMiIguFMaeAXn/9
      dZLJJI7j0NTUxNq1aykuLv7a+4yMjHDy5Ekef/xxIpHIN+5jamqK8fFxamtr79WwRUTyxph3
      ACdPnqSpqYnm5maOHTvG559/TiaTmX51f/O/b/5Y12QyycjICL29vXieRy6XI5lMMjk5STqd
      nr7d5OQkyWQSz/Po6emhs7OTZDJJLpeblz8dUETMYcw7ANd1Wbx4MbZtEwQBiUSCf/3Xf6Wj
      o4PFixezd+9eNm3aRE1NDW+88Qa9vb2kUinKy8vxfZ/XXnuN8+fP47ouVVVVvPDCC7z++utc
      uHABgCeeeIJTp05x6tQpxsfH2bJlC/fff3+Bj1pE5HczJgBDQ0P80z/9E4lEgkgkwvLlyzl9
      +vT07xMYHR0lmUxy9epVuru7efHFF5mYmODo0aP09fVx9uxZfvjDHwLw1ltvcfnyZbq7u/mT
      P/kTLl68yPHjx3nsscfI5XK88MILxGKxQh6uiMg3MiYAVVVVvPTSS+RyOd566y1Onz5924u7
      fX19NDY20tTUxJUrV7Btm8HBQWpra2lpaWF0dBTLsujv76evr4+33nqLbDY7/bPJo9HojB9W
      JyIyVxkTAMdxiMfjxONxGhoaSCQS+L5PMplkYmKCRCIBQG1tLR999BETExOMjY3heR4VFRVc
      vHiRs2fPMj4+jud5lJeXU1paSnt7O7FYjJGREWKxGOPj42QyGVzXxbIs/SA7EZmzjAnA4OAg
      f/d3f0coFCIWi/GDH/wAy7L4x3/8R6LRKBP/8Q9iamtryWaz/PSnPyWXy9HQ0MDSpUt56KGH
      ePPNNwmHw+RyOZqamqirq+MXv/gFkUiEBx54gCeeeIJMJsNPf/pTduzYwYYNGwp81CIiv5sx
      Afjbv/3b6f+++cq8paWF7du347oukUhk+tX6T37yE8bGxigpKSEUCuF5Ho2NjTz44IN89tln
      JBIJSktL+fM//3OmpqawLIuioiIsy+InP/kJqVRqXv56OBExizEBcG7z+0Idx7ntL5MJhUIz
      zuNnMhkuXLhANpulrKyM9vb26a/31Yu9juPoArCIzAvGBOBuRCIRXnzxRbLZLJFIRL97WEQW
      hAX9TDYxMcEvfvGLQg9j3otEIpSWlvLee+8VeijzXn19PcePH5+xLTUwgFeg8YRPnCA0D79H
      wuEw5eXlvP/++9Pbsh9/TKZA43H6+ymah/NIsIC9+eabAaA/d/lnxYoVwY9//OOCj2Mh/PnZ
      z35W8DEshD9NTU3BX/3VXxV8HPP8z8J+BxAOh3nggQcKPYx5r76+nurqas3lPRCPx2+ZR7+7
      myCZLMh47CVLsKqqCrLvu7FkyRKqqqpmzGUwNIR//XpBxmPFYtgtLQXZ9+/r9OnTWEGwcH9g
      zblz52htbS30MOa9ZDLJ0NAQDQ0NhR7KvHe7NTn+3e/iffRRQcYT/dnPKPqLvyjIvu9GKpWi
      v7+fxsbG/9z2v/83U3/5lwUZj/v445S8+25B9v37sizLMuaHwYmIyEwKgIiIoRQAERFDKQAi
      IoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhK
      ARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBE
      xFAKgIiIoRQAERFDKQAiIoZSAEREDDUrAQiCgGw2Oxu7EhGROzQrAUin05w8efKW7VNTU2Qy
      mW+8/9TUFFNTU/kYmoiIsdx8fvEgCLhw4QKdnZ309vZy5coVOjo6SKfTvP322/T392PbNlu2
      bOH++++ns7OTzz//HMdxqK2tZffu3Zw7d44PP/wQgE2bNrFx40ZOnDhBOBzmoYce4uTJk1y+
      fJmnn34a183r4YiILCh5fcbM5XJ89NFHLF68mFAoxJo1a3Bdl+HhYVpbW9mzZw+nTp3i008/
      paGhgUQiwXPPPUddXR22bZNOpzl+/Di7d+8mFAqxf/9+WlpaSCaTeJ7HtWvXOHz4ME888QSO
      4+TzUEREFpy8BsC2bSorK+np6aGkpIT77rsP27aJxWK0tLSQTqe5ePEiFRUV+L7PwMAAn3/+
      ObZt09DQQCaTwbZt6urqAIjH40xOThIEAaOjo3z++eesWrWKlpYWLMvK56GIiCw4eQ9AR0cH
      hw8f5uDBg/z85z/n6aefpqamhhs3brB3717Ky8tpb28nFArx4IMPMj4+zmuvvUZpaSltbW24
      rks4HMbzPGzbxvM8PM/j2LFjANPvDuCLdxy5XG56/57nkUwm83mIRkilUuRyOc3lPXC7Nen7
      foFGA9lMBn8ePq6ZTOaWNendwfXEfPF8f15+f+Q1AJZlEYvF2LBhA319ffi+z7lz53Bdl337
      9tHY2Eh7ezuRSASALVu2ANDf38/LL7+M7/tks1mmpqawLItsNksoFMJ1XbZv387Y2BgHDhzg
      mWeeIRaL4brujOsAjuNQXFycz0M0xuTkpObyHrjdmszZNl6BxhMKhymah4+rbdu4rjtjLlPh
      MLmvuU8+ObY9L78/8vopoGw2y7//+7/z6aefMjo6SjKZJBwO09vbSxAErFu3jmQyyeTkJP39
      /fzqV79iaGiIgYEBAIqLi3Ech/Pnz9PT08PU1BQlJSVfDNy2aWtrI5lM8vHHHxf0VZSIyHyU
      13cAjuOwdOlSjh8/zuDgIFu3buWBBx7gt7/9Ldlsltdffx2Auro62trayGQyvPLKK9OfDFq6
      dCnt7e0cOnQI3/d5/PHHqaysZNGiRYRCIcrKyti1axdHjx6dPkUkIiJ3Ju/XANauXUtjYyPv
      v//+9CmeDRs2sGHDhltu//3vfx/P8wiCYPq8/n333UdzczNBEBAOhwF44IEHpu9TX19PfX19
      Pg9DRGRBmpUPzpeUlNDR0fGNt7Ms67af5b8ZAxERuXdm5ZyJPU8vkIiILGQ6aS4iYigFQETE
      UAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykA
      IiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgY
      SgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVA
      RMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFD
      KQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEULMSAN/3mZqamo1diYjIHXLz+cWDIMDz
      PAYHBzl69Cjbtm0jGo0CkEwmGR0dJRQKUVlZSSgUIp1OMzAwgOM4VFdXEwqFyGQyDA4OAlBd
      XU04HCadTmNZFuFwmGw2SyaTIRaLYVlWPg9HRGRByXsAjh07xpEjRxgYGCCVSrF9+3ZGR0fp
      7OzEdV0mJiZYvXo13/nOd+js7OT69ev4vs+KFStoa2vj0KFDXLx4Edu2qaurY8eOHRw+fJhI
      JMKjjz5KZ2cnU1NTPPPMM7huXg9HRGRByeszpud5nD9/njVr1jAwMEB7ezvxeJwgCNi5cydL
      ly7lzJkzfPrppwwNDdHf38+ePXtIpVJ0dnYyMDBAT08PP/jBDwiFQuzbt4/h4eHpr9/d3U13
      dzfPPfccjuPk81BERBacvAbAcRxaW1v54IMPiEQiBEGA67pUVVVRUVHB1atXOXz4MGvWrJk+
      jVNZWUkmk8F1XcbGxgiFQtTW1uL7PrFYjKmpKXzf5/z583zwwQfs3r2bpUuXYlkWvu8TBMH0
      /m+egpK7c3NeNZd3b67NY+D7c2o8d8rzvFvmMvD9go0n+I8xzTd5DYBt26xfv55oNMrevXv5
      l3/5F55++mkaGhr47LPPOHDgAA8//DAbN27kypUrWJY1/Qe+eOIBZmwLgoAgCBgfHyebzRKN
      Rmf8vxkLIgjI5XL5PEQjeJ6H7/uay3vgdmvyyy9aZps3Tx/X261Jr5ABmKfPNXm/BuA4Do2N
      jbS2thIKhejp6SEcDnPw4EHa2tpYu3YtjuMQjUZJJpMkk0nS6TS5XI54PE4mk2FiYgLHcUil
      UoTDYRzH4ZFHHsF1Xfbv3095eTmVlZU4jjPjVJBt20QikXweohE8z8NxHM3lPXC7NZku4IcX
      XNedl4/rzeeWL489cF2yBRqPbVnzch7zGoBcLsdrr71GOp2mp6eH8vJyVq9ezcWLF4EvPgl0
      4sQJysvLWbJkCZFIhPfee490Ok1paSk1NTVUVVVx6NAhQqEQrutSWVlJV1cXtm3zyCOPcOPG
      DQ4cOMCePXt0EVhE5FvI+zWAxx57jHPnzjEyMsKOHTtoaWmhqKiITCZDJpMBoKioiOLiYrZt
      28aZM2eIRqOsXbuW0tJS2tvbOX36NL7vs2HDBuLxOK2trbiuSzgcZsuWLXR3d+sjoCIi31Le
      rwHU19dTVlaGZVmsXLkSgObmZpqbm2+5/dKlS1m8ePH0fQFqa2upqamZfssHUF9fP32fiooK
      1q9fn8/DEBFZkGblnElJSQnt7e13dNubT/zftE1ERO6OnllFRAylAIiIGEoBEBExlAIgImIo
      BUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAR
      EUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAyl
      AIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAi
      YigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEU
      ABERQykAIiKGUgBERAylAIiIGGpWAuD7PqlUajZ2JSIid8jN5xcPggDP8xgeHubIkSNs27aN
      aDSKZVl4nkcikSAajRKJRAiCgKmpKTKZDACO4xCLxcjlcgwODmJZFpWVlYTD4enbhMNhstks
      2WyW4uJiLMvK5+HIlwQTEwTj44XZeSSCXV1dmH2LLCB5D8Dx48c5fPgwAwMDJJNJduzYQSgU
      4oMPPuDEiRPs3r2b9evXk0qleO211xgYGCAWi1FdXc3WrVs5fPgwXV1d2LZNQ0MD27dv5/Dh
      w0QiER599FEOHDhAMpnkmWeewXXzejjyJem//3um/vqvC7Jvd8cOSt5+uyD7FllI8vqM6Xke
      586dY82aNfT399Pe3k48HieRSFBWVsayZcvwPA+ATCaDZVk8++yzLF26FMuySIcKKOcAAAjU
      SURBVCaTXLx4cfrJfd++fQwPD09//e7ubrq6unj22WdxHCefhyIisuDkNQCO43Dffffx4Ycf
      UlRUhG3buK5LZWUljz32GJOTk9O3vXmq5/3336e+vp5Vq1YBEAqFqK2txfd94vE4U1NT+L7P
      hQsX+PDDD3nyySepq6vDsiyCICAIgumvefMUlNwd3/dvmUvf9ws2nvn8uM61sQe+P6fGc6c8
      z7tlLoNCrsn/GNN8k9cA2LbNhg0biEaj7N27l1deeYXdu3fT1NSEbc+8/hyPx9m+fTuJRILz
      589z+vRptm/fDoBlWdPn928+yY+OjpLJZGac+/e/spiDICCXy+XzEI3geR6+78+Yy0IHYL4+
      rrcb+5dftMw27yuP63xxuzXpaU1+a3m/BuC6Ls3NzaxatQrXdenp6aGpqemWV+rhcJiVK1di
      WRbLli3jlVdewbIsMpkMiUQC27ZJp9OEQiEcx2H9+vXYtk1nZycVFRVUVFTgOM6MU0G2bROJ
      RPJ5iEbwPA/HcWbMZeC6ZAs0njt9XIMgIFfAV2Wu49zywYTbjT1dwA8vuK57R3Pp+X7Bom9Z
      Fu5XTvEGQTC31qRlzcs1mdcA5HI5XnvtNTKZDD09PZSVlbF69WoGBwe5fPkyV69eZWRkhFgs
      RmlpKfv372f16tUMDQ0RCoWorKyksrKSd999F9d1sW2bqqoquru7p99d9PX10dnZyZ49e3QR
      WGa43D9E0x/+t4Ltf+DV/0d1WUnB9n8v/f3r/85//9k/FGTf31mzkg9/9r8Ksu97rW9kjCX/
      5b8WbP9X/+X/sLSqcvrvef13AI7jsHnzZmpraykpKWH79u0sW7aMdDrNyMgIjY2NVFdXMzY2
      RkVFBQ899BDj4+OEw2F27txJVVUVHR0dxGIxQqEQHR0dxONxWltbaWlpIRwOs2XLFlpaWvQR
      UBGRbynv1wAaGhooLy/Htu3pC7v19fXU19ffcvuHH354+tTQzWsEtbW1bNu2bfot383733Tz
      XYKIiHw7s3LOpKSkhI6Ojm+83Zcv9n7ZVy8Yi4jI3dMzq4iIoRQAERFDKQAiIoZSAEREDKUA
      iIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJi
      KAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQA
      ERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQM
      pQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIg
      ImIoBUBExFAKgIiIoRQAERFDKQAiIoaalQB4nsfw8PAt24MgIAiCGdt838f3/W/cJiIid8fN
      5xcPgoBEIsHZs2c5fvw4TzzxBI2NjYTDYcbHx7l48SINDQ1UVVURBAH9/f189tlnuK7LqlWr
      qKysZGhoiLNnzxIEAatWraKmpoa+vj5s26ampobh4WGGh4dZvnw5tq03NCIidyqvAfB9nw8+
      +IDu7m6Gh4c5e/YsFRUVeJ7HW2+9xaVLl/j+979PVVUVk5OTdHZ2Eo/HyWQy3Lhxg+3bt3Pw
      4EFs28Z1XQ4cOMDTTz/Nb3/7WyKRCKWlpezfv5+KigqWLVuWz0MREVlw8vqS2fd9RkZGaG5u
      ZsWKFezatYvKykri8Ti7du3i0UcfnT61MzY2RiqVor29na1btzI2NkZ/fz+Dg4N0dHSwdetW
      stns9KmkXC7HsWPHmJqaYvPmzXr1LyLyLeX1HYDrujz88MMcOHCA8fFxzp49y6pVq4jFYsRi
      MU6fPj1926mpKYqLiykuLsZ1XRzHIZFIEA6HKSkpwfd9ioqKyGQyeJ7HyZMnSSQS/Omf/ill
      ZWXAF9cavnytwPd9MplMPg/RCNlsFs/zZsxlLpcr2Hju9HHNZgv72GezmVvGebuxf/U62Gzy
      crk7msucV7jHOwiCW8Z483ngy9u9Qq7J24zxdgq+JjPZGePMawAsy6K1tZWioiJeffVVDh06
      RDgcZtWqVViWNeO2juPg+/6MC8Ou696yzbIsbNumvr6e3t5eBgcHaWhowLKs6f/35f3rncHd
      s237lrks5Lze6eNq284sjObr9m/fMs7bjf2r3wuzybrNGG/Htgr5eN+63hzHufX7XWvyDvY/
      8/HO+zWAGzduYFkWS5YsIRKJ0NfXx8qVK6ef1IMgwPd9iouLSSQSDA0NkUqlyGazlJaWks1m
      uXHjBqFQiImJCaLRKJZlUV9fz+bNm3n11VcpLS297UVgy7Jw3bweohEcx5m+DnNTrsDfbHfy
      uDpOYb/ZHMe9ZZxzbU1+9XH9utsVzq1zlsvl5taahPmxJl1nxjjzHoCPP/6Y3t5erl+/TlNT
      E+vXr6erq2t6eyQSYWBggLa2Nmpqati7dy++79PY2Eh1dTVNTU3s27cPx3GoqamhsrJyurZ1
      dXWsW7eOd999l6amJkKhUD4PR0RkQclrABzHoaOjgxs3bnD06FF2795NSUkJU1NTtLW1/ecg
      XJd4PM7OnTtnvGMoKiqavn8QBCxevJiioiI2btw4Xf/vfve7rF27tuBlFRGZb/J+DSAej1NX
      V8fatWspLy8HIB6PE4/Hb7l9LBZj+fLlM7YVFxff8hHPL983EolQU1OTh9GLiCxss3LSLBqN
      sm7dutnYlYiI3CF9REZExFAKgIiIoRQAERFDKQAiIoZSAEREDDV3/kniLEn8wR/gfelnEM2m
      6N/8DeE/+INvvN3Pf/UOf/vPr83CiG716P338fO//ouC7FtEZpdxAfAvXsQ/e7Yg+w5GR+/o
      dsMTCc72Xs3zaG5vcWV5QfYrIrNPp4BERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQA
      ERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUP9f4+kkk7P87f0
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='NA PS CNAD' width='384'>
      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
      sEQTCoUIhUIPPb6goOChbZFIJHc94MHnvf9PrfHL5/m/W3dxuX8gb/v/79/aRF1FWd7277XN
      Bw5zpKs7b/v/b+u+xuNtzXnbv9f+z9vb6B+6m7f9/8/vvULJA++9nt5UHwgEmDlzppdPKfJn
      eWP3AT44cSZv+//empXTKgDbj5zgF+/uzNv+n5ozc1oF4JfbdnPqyrW87f9vX3l+QgC0niIi
      YigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEU
      ABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAERE
      DKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQC
      ICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAzlaQBc1yWbzeK6rpdPKyIij4CnAchkMpw+
      fRrHcSZsT6VSJJPJh7bF4/EJ29Lp9EPbRETk0fj/nM60+H1SfQcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Quarter Spend' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
